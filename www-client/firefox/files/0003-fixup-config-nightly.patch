diff --git a/build/moz.configure/finalize-flags.configure b/build/moz.configure/finalize-flags.configure
--- a/build/moz.configure/finalize-flags.configure
+++ b/build/moz.configure/finalize-flags.configure
@@ -25,11 +25,12 @@
     flags = []
     if android_flags:
         flags.extend(android_flags.ldflags)
     if thumb_option:
         flags.extend(thumb_option)
-    flags.extend(split(env_ldflags[0]))
+    if env_ldflags:
+        flags.extend(split(env_ldflags[0]))
     flags.extend(linker_flags.ldflags)
     if linker_ldflags:
         flags.extend(linker_ldflags)
     if pack_relative_relocs_flags:
         flags.extend(pack_relative_relocs_flags)
diff --git a/build/moz.configure/flags.configure b/build/moz.configure/flags.configure
--- a/build/moz.configure/flags.configure
+++ b/build/moz.configure/flags.configure
@@ -567,34 +567,39 @@
             flags += ["-D_AMD64_"]
     elif host.kernel == "Darwin":
         flags += ["-DXP_UNIX", "-DXP_MACOSX"]
     else:
         flags += ["-DXP_UNIX"]
-    flags += split(base_cppflags[0])
+    if base_cppflags:
+        flags += split(base_cppflags[0])
     return flags
 
 
 @depends("HOST_CFLAGS", compilation_flags)
 @imports(_from="mozbuild.shellutil", _import="split")
 def host_cflags(base_cflags, compilation_flags):
     flags = list(compilation_flags.host_cflags)
-    flags += split(base_cflags[0])
+    if base_cflags:
+        flags += split(base_cflags[0])
     return flags
 
 
 @depends("HOST_CXXFLAGS", compilation_flags)
 @imports(_from="mozbuild.shellutil", _import="split")
 def host_cxxflags(base_cxxflags, compilation_flags):
     flags = list(compilation_flags.host_cxxflags)
-    flags += split(base_cxxflags[0])
+    if base_cxxflags:
+        flags += split(base_cxxflags[0])
     return flags
 
 
 @depends("HOST_LDFLAGS", linker_flags, host_linker_ldflags, host, host_c_compiler)
 @imports(_from="mozbuild.shellutil", _import="split")
 def host_ldflags(env_ldflags, linker_flags, host_linker_ldflags, host, compiler):
-    flags = split(env_ldflags[0])
+    flags = []
+    if env_ldflags:
+        flags += split(env_ldflags[0])
     flags += host_linker_ldflags
     if host.kernel == "WINNT" and compiler.type == "clang-cl":
         if host.cpu == "x86":
             flags += ["-MACHINE:X86"]
         elif host.cpu == "x86_64":
@@ -604,11 +609,13 @@
 
 
 @depends("CPPFLAGS")
 @imports(_from="mozbuild.shellutil", _import="split")
 def os_cppflags(env_cppflags):
-    flags = split(env_cppflags[0])
+    flags = []
+    if env_cppflags:
+        flags = split(env_cppflags[0])
     return flags
 
 
 @depends("CFLAGS", compilation_flags, android_flags, all_arm_flags)
 @imports(_from="mozbuild.shellutil", _import="split")
@@ -617,11 +624,12 @@
     if android_flags:
         flags.extend(android_flags.cflags)
     if all_arm_flags:
         flags.extend(all_arm_flags)
     flags.extend(compilation_flags.cflags)
-    flags.extend(split(env_cflags[0]))
+    if env_cflags:
+        flags.extend(split(env_cflags[0]))
     return flags
 
 
 @depends("CXXFLAGS", compilation_flags, android_flags, all_arm_flags)
 @imports(_from="mozbuild.shellutil", _import="split")
@@ -630,11 +638,12 @@
     if android_flags:
         flags.extend(android_flags.cxxflags)
     if all_arm_flags:
         flags.extend(all_arm_flags)
     flags.extend(compilation_flags.cxxflags)
-    flags.extend(split(env_cxxflags[0]))
+    if env_cxxflags:
+        flags.extend(split(env_cxxflags[0]))
     return flags
 
 
 @depends(
     "ASFLAGS",
@@ -662,11 +671,12 @@
     if all_arm_flags:
         flags.extend(all_arm_flags)
     flags.extend(asm_flags.asflags)
     if build_project != "js" and c_compiler.type != "clang-cl":
         flags.extend(defines_cpp_flags)
-    flags.extend(split(env_asflags[0]))
+    if env_asflags:
+        flags.extend(split(env_asflags[0]))
     return flags
 
 
 # VS2012+ defaults to -arch:SSE2. We want to target nothing more recent, so set
 # that explicitly here unless another target arch has already been set.
diff --git a/build/moz.configure/toolchain.configure b/build/moz.configure/toolchain.configure
--- a/build/moz.configure/toolchain.configure
+++ b/build/moz.configure/toolchain.configure
@@ -119,11 +119,11 @@
 set_config("MOZ_OPTIMIZE", moz_optimize)
 add_old_configure_assignment("MOZ_OPTIMIZE", moz_optimize)
 add_old_configure_assignment("MOZ_CONFIGURE_OPTIMIZE_FLAGS", moz_optimize_flags)
 
 
-@depends("MOZ_OPTIMIZE_FLAGS")
+@depends_if("MOZ_OPTIMIZE_FLAGS")
 @imports(_from="mozbuild.shellutil", _import="split")
 def moz_optimize_flags(env_optimize_flags):
     return split(env_optimize_flags[0])
 
 


