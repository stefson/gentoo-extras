# HG changeset patch
# User Andi-Bogdan Postelnicu <andi@mozilla.com>
# Date 1662721310 0
# Node ID 27ad8fddd96dfed77490d4d15aee98ae3128ae85
# Parent  c955747778a29618cf6347cd8722e1f60c7e100a
Bug 1746462 - add support for --enable-linker=mold on linux. r=glandium

Differential Revision: https://phabricator.services.mozilla.com/D134330

diff --git a/build/moz.configure/toolchain.configure b/build/moz.configure/toolchain.configure
--- a/build/moz.configure/toolchain.configure
+++ b/build/moz.configure/toolchain.configure
@@ -1508,17 +1508,17 @@ def enable_linker_default(target, develo
     # lld is faster, so prefer that for developer builds.
     if target.os == "Android" and target.cpu in ("x86", "x86_64"):
         return "lld" if developer_options else "bfd"
 
 
 option(
     "--enable-linker",
     nargs=1,
-    help="Select the linker {bfd, gold, ld64, lld, lld-*}{|}",
+    help="Select the linker {bfd, gold, ld64, lld, lld-*, mold}{|}",
     default=enable_linker_default,
     when=is_linker_option_enabled,
 )
 
 
 # No-op to enable depending on --enable-linker from default_elfhack in
 # toolkit/moz.configure.
 @depends("--enable-linker", when=is_linker_option_enabled)
@@ -1543,17 +1543,17 @@ def select_linker(linker, c_compiler, de
         linker = linker[0]
     else:
         linker = None
 
     def is_valid_linker(linker):
         if target.kernel == "Darwin":
             valid_linkers = ("ld64", "lld")
         else:
-            valid_linkers = ("bfd", "gold", "lld")
+            valid_linkers = ("bfd", "gold", "lld", "mold")
         if linker in valid_linkers:
             return True
         if "lld" in valid_linkers and linker.startswith("lld-"):
             return True
         return False
 
     if linker and not is_valid_linker(linker):
         # Check that we are trying to use a supported linker
@@ -1588,16 +1588,19 @@ def select_linker(linker, c_compiler, de
         env["LC_ALL"] = "C"
         retcode, stdout, stderr = get_cmd_output(*cmd, env=env)
         if retcode == 1 and "Logging ld64 options" in stderr:
             kind = "ld64"
 
         elif retcode != 0:
             return None
 
+        elif "mold" in stdout:
+            kind = "mold"
+
         elif "GNU ld" in stdout:
             # We are using the normal linker
             kind = "bfd"
 
         elif "GNU gold" in stdout:
             kind = "gold"
 
         elif "LLD" in stdout:
@@ -1694,17 +1697,17 @@ def linker_ldflags(
 add_old_configure_assignment("LINKER_LDFLAGS", linker_ldflags)
 
 
 # There's a wrinkle with MinGW: linker configuration is not enabled, so
 # `select_linker` is never invoked.  Hard-code around it.
 @depends(select_linker, target, c_compiler)
 def gcc_use_gnu_ld(select_linker, target, c_compiler):
     if select_linker is not None and target.kernel != "Darwin":
-        return select_linker.KIND in ("bfd", "gold", "lld")
+        return select_linker.KIND in ("bfd", "gold", "lld", "mold")
     if target.kernel == "WINNT" and c_compiler.type == "clang":
         return True
     return None
 
 
 # GCC_USE_GNU_LD=1 means the linker is command line compatible with GNU ld.
 set_config("GCC_USE_GNU_LD", gcc_use_gnu_ld)
 add_old_configure_assignment("GCC_USE_GNU_LD", gcc_use_gnu_ld)
diff --git a/toolkit/moz.configure b/toolkit/moz.configure
--- a/toolkit/moz.configure
+++ b/toolkit/moz.configure
@@ -1441,17 +1441,17 @@ with only_when("--enable-compile-environ
             target.kernel == "Linux"
             and host.kernel == "Linux"
             and target.cpu in ("arm", "aarch64", "x86", "x86_64")
         )
 
     @depends("--enable-release", enable_linker)
     def default_elfhack(release, linker):
         # Disable elfhack when explicitly building with --enable-linker=lld
-        if linker and linker.origin != "default" and linker[0] == "lld":
+        if linker and linker.origin != "default" and linker[0] in ("lld", "mold"):
             return False
         return bool(release)
 
     with only_when(has_elfhack):
         option(
             "--disable-elf-hack",
             default=default_elfhack,
             help="{Enable|Disable} elf hacks",

