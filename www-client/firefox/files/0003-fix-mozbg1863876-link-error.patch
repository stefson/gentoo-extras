# HG changeset patch
# User stransky <stransky@redhat.com>
# Date 1699527697 0
# Node ID 2a3457fbe4677f6fc331a28bb56287c61e3bbe3f
# Parent  b1212bc13163d5c4d02418e0346199da626d8249
Bug 1863876 [Linux] Move IsCancelledGError() from AsyncDBus.h to WidgetUtilsGtk.h r=emilio

Differential Revision: https://phabricator.services.mozilla.com/D193185

diff --git a/widget/gtk/AsyncDBus.cpp b/widget/gtk/AsyncDBus.cpp
--- a/widget/gtk/AsyncDBus.cpp
+++ b/widget/gtk/AsyncDBus.cpp
@@ -82,13 +82,9 @@ RefPtr<DBusCallPromise> DBusProxyCallWit
     GCancellable* aCancellable) {
   auto promise = MakeRefPtr<DBusCallPromise::Private>(__func__);
   g_dbus_proxy_call_with_unix_fd_list(
       aProxy, aMethod, aArgs, aFlags, aTimeout, aFDList, aCancellable,
       ProxyCallWithUnixFDListCallback, do_AddRef(promise).take());
   return promise.forget();
 }
 
-bool IsCancelledGError(GError* aGError) {
-  return g_error_matches(aGError, G_IO_ERROR, G_IO_ERROR_CANCELLED);
-}
-
 }  // namespace mozilla::widget
diff --git a/widget/gtk/AsyncDBus.h b/widget/gtk/AsyncDBus.h
--- a/widget/gtk/AsyncDBus.h
+++ b/widget/gtk/AsyncDBus.h
@@ -28,13 +28,11 @@ RefPtr<DBusCallPromise> DBusProxyCall(GD
                                       GVariant* aArgs, GDBusCallFlags,
                                       gint aTimeout = -1,
                                       GCancellable* = nullptr);
 
 RefPtr<DBusCallPromise> DBusProxyCallWithUnixFDList(
     GDBusProxy*, const char* aMethod, GVariant* aArgs, GDBusCallFlags,
     gint aTimeout = -1, GUnixFDList* = nullptr, GCancellable* = nullptr);
 
-bool IsCancelledGError(GError* aGError);
-
 }  // namespace mozilla::widget
 
 #endif
diff --git a/widget/gtk/WidgetUtilsGtk.cpp b/widget/gtk/WidgetUtilsGtk.cpp
--- a/widget/gtk/WidgetUtilsGtk.cpp
+++ b/widget/gtk/WidgetUtilsGtk.cpp
@@ -488,9 +488,13 @@ bool IsGnomeDesktopEnvironment() {
   return sIsGnome;
 }
 
 bool IsKdeDesktopEnvironment() {
   static bool sIsKde = GetDesktopEnvironmentIdentifier().EqualsLiteral("kde");
   return sIsKde;
 }
 
+bool IsCancelledGError(GError* aGError) {
+  return g_error_matches(aGError, G_IO_ERROR, G_IO_ERROR_CANCELLED);
+}
+
 }  // namespace mozilla::widget
diff --git a/widget/gtk/WidgetUtilsGtk.h b/widget/gtk/WidgetUtilsGtk.h
--- a/widget/gtk/WidgetUtilsGtk.h
+++ b/widget/gtk/WidgetUtilsGtk.h
@@ -9,16 +9,17 @@
 #include "nsString.h"
 #include "nsTArray.h"
 #include "mozilla/MozPromise.h"
 
 #include <stdint.h>
 
 typedef struct _GdkDisplay GdkDisplay;
 typedef struct _GdkDevice GdkDevice;
+typedef struct _GError GError;
 typedef union _GdkEvent GdkEvent;
 class nsWindow;
 
 namespace mozilla::widget {
 
 class WidgetUtilsGTK {
  public:
   /* See WidgetUtils::IsTouchDeviceSupportPresent(). */
@@ -70,11 +71,13 @@ bool IsGnomeDesktopEnvironment();
 bool IsKdeDesktopEnvironment();
 
 // Parse text/uri-list
 nsTArray<nsCString> ParseTextURIList(const nsACString& data);
 
 using FocusRequestPromise = MozPromise<nsCString, bool, false>;
 RefPtr<FocusRequestPromise> RequestWaylandFocusPromise();
 
+bool IsCancelledGError(GError* aGError);
+
 }  // namespace mozilla::widget
 
 #endif  // WidgetUtilsGtk_h__
diff --git a/widget/gtk/nsAppShell.cpp b/widget/gtk/nsAppShell.cpp
--- a/widget/gtk/nsAppShell.cpp
+++ b/widget/gtk/nsAppShell.cpp
@@ -20,17 +20,17 @@
 #include "mozilla/ProfilerThreadSleep.h"
 #include "mozilla/Unused.h"
 #include "mozilla/GUniquePtr.h"
 #include "mozilla/WidgetUtils.h"
 #include "nsIPowerManagerService.h"
 #ifdef MOZ_ENABLE_DBUS
 #  include <gio/gio.h>
 #  include "nsIObserverService.h"
-#  include "AsyncDBus.h"
+#  include "WidgetUtilsGtk.h"
 #endif
 #include "WakeLockListener.h"
 #include "gfxPlatform.h"
 #include "nsAppRunner.h"
 #include "mozilla/XREAppData.h"
 #include "ScreenHelperGTK.h"
 #include "HeadlessScreenHelper.h"
 #include "mozilla/widget/ScreenManager.h"


