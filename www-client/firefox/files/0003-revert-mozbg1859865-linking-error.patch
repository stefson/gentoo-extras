diff --git a/hal/linux/UPowerClient.cpp b/hal/linux/UPowerClient.cpp
index d5f5e1c..816d223 100644
--- a/hal/linux/UPowerClient.cpp
+++ b/hal/linux/UPowerClient.cpp
@@ -167,13 +167,9 @@ void UPowerClient::BeginListening() {
             UpdateTrackedDevices();
           },
           [](GUniquePtr<GError>&& aError) {
-            if (!g_error_matches(aError.get(), G_IO_ERROR,
-                                 G_IO_ERROR_CANCELLED)) {
-              g_warning(
-                  "Failed to create DBus proxy for org.freedesktop.UPower: "
-                  "%s\n",
-                  aError->message);
-            }
+            g_warning(
+                "Failed to create DBus proxy for org.freedesktop.UPower: %s\n",
+                aError->message);
           });
 }
 
@@ -279,12 +275,9 @@ void UPowerClient::UpdateTrackedDevices() {
                              G_CALLBACK(DeviceChanged), this);
           },
           [this](GUniquePtr<GError>&& aError) {
-            if (!g_error_matches(aError.get(), G_IO_ERROR,
-                                 G_IO_ERROR_CANCELLED)) {
-              g_warning(
-                  "Failed to enumerate devices of org.freedesktop.UPower: %s\n",
-                  aError->message);
-            }
+            g_warning(
+                "Failed to enumerate devices of org.freedesktop.UPower: %s\n",
+                aError->message);
             g_signal_connect(mUPowerProxy, "g-signal",
                              G_CALLBACK(DeviceChanged), this);
           });
diff --git a/widget/gtk/MPRISServiceHandler.cpp b/widget/gtk/MPRISServiceHandler.cpp
index ae1ef86..d9d1894 100644
--- a/widget/gtk/MPRISServiceHandler.cpp
+++ b/widget/gtk/MPRISServiceHandler.cpp
@@ -24,7 +24,6 @@
 #include "nsNetUtil.h"
 #include "nsServiceManagerUtils.h"
 #include "WidgetUtilsGtk.h"
-#include "AsyncDBus.h"
 #include "prio.h"
 
 #define LOGMPRIS(msg, ...)                   \
@@ -319,11 +318,9 @@ void g_bus_get_callback(GObject* aSourceObject, GAsyncResult* aRes,
 
   GDBusConnection* conn = g_bus_get_finish(aRes, getter_Transfers(error));
   if (!conn) {
-    if (!IsCancelledGError(error.get())) {
-      NS_WARNING(nsPrintfCString("Failure at g_bus_get_finish: %s",
-                                 error ? error->message : "Unknown Error")
-                     .get());
-    }
+    NS_WARNING(nsPrintfCString("Failure at g_bus_get_finish: %s",
+                               error ? error->message : "Unknown Error")
+                   .get());
     return;
   }
 
diff --git a/widget/gtk/nsAppShell.cpp b/widget/gtk/nsAppShell.cpp
index 93a9024..8b2c803 100644
--- a/widget/gtk/nsAppShell.cpp
+++ b/widget/gtk/nsAppShell.cpp
@@ -25,7 +25,6 @@
 #ifdef MOZ_ENABLE_DBUS
 #  include <gio/gio.h>
 #  include "nsIObserverService.h"
-#  include "AsyncDBus.h"
 #endif
 #include "WakeLockListener.h"
 #include "gfxPlatform.h"
@@ -39,7 +38,6 @@
 #endif
 
 using namespace mozilla;
-using namespace mozilla::widget;
 using mozilla::widget::HeadlessScreenHelper;
 using mozilla::widget::ScreenHelperGTK;
 using mozilla::widget::ScreenManager;
@@ -222,7 +220,7 @@ void nsAppShell::DBusConnectClientResponse(GObject* aObject,
   RefPtr<GDBusProxy> proxyClient =
       dont_AddRef(g_dbus_proxy_new_finish(aResult, getter_Transfers(error)));
   if (!proxyClient) {
-    if (!IsCancelledGError(error.get())) {
+    if (!g_error_matches(error.get(), G_IO_ERROR, G_IO_ERROR_CANCELLED)) {
       NS_WARNING(
           nsPrintfCString("Failed to connect to client: %s\n", error->message)
               .get());
diff --git a/widget/gtk/nsUserIdleServiceGTK.cpp b/widget/gtk/nsUserIdleServiceGTK.cpp
index c556d8f..e8741d1 100644
--- a/widget/gtk/nsUserIdleServiceGTK.cpp
+++ b/widget/gtk/nsUserIdleServiceGTK.cpp
@@ -196,11 +196,9 @@ class UserIdleServiceMutter : public UserIdleServiceImpl {
               },
               [this](GUniquePtr<GError>&& aError) {
                 mPollInProgress = false;
-                if (!IsCancelledGError(aError.get())) {
-                  g_warning("Failed to call GetIdletime(): %s\n",
-                            aError->message);
-                  mUserIdleServiceGTK->RejectAndTryNextServiceCallback();
-                }
+                g_warning("Failed to call GetIdletime(): %s\n",
+                          aError->message);
+                mUserIdleServiceGTK->RejectAndTryNextServiceCallback();
               });
     }
 
@@ -229,9 +227,7 @@ class UserIdleServiceMutter : public UserIdleServiceImpl {
               mUserIdleServiceGTK->AcceptServiceCallback();
             },
             [this](GUniquePtr<GError>&& aError) {
-              if (!IsCancelledGError(aError.get())) {
-                mUserIdleServiceGTK->RejectAndTryNextServiceCallback();
-              }
+              mUserIdleServiceGTK->RejectAndTryNextServiceCallback();
             });
     return true;
   }
