From 89aeeae531a29af1b10c4c65764f96800f383017 Mon Sep 17 00:00:00 2001
From: Flamefire <Flamefire@users.noreply.github.com>
Date: Thu, 15 Aug 2019 10:48:49 +0200
Subject: [PATCH 1/2] Don't include WIN32 resource dir for non-WIN32 builds

Fixes #1096
---
 extras/videoDrivers/SDL/CMakeLists.txt | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/extras/videoDrivers/SDL/CMakeLists.txt b/extras/videoDrivers/SDL/CMakeLists.txt
index 67d7fc7b1..016a8beb2 100644
--- a/extras/videoDrivers/SDL/CMakeLists.txt
+++ b/extras/videoDrivers/SDL/CMakeLists.txt
@@ -8,12 +8,12 @@ IF (SDL_FOUND)
 
 	ADD_LIBRARY(videoSDL SHARED ${RTTR_DRIVER_INTERFACE} VideoSDL.cpp VideoSDL.h)
 	target_link_libraries(videoSDL PRIVATE videodrv ${SDL_LIBRARY} nowide::static)
-	target_include_directories(videoSDL PRIVATE ${SDL_INCLUDE_DIR} ${PROJECT_SOURCE_DIR}/data/win32)
+	target_include_directories(videoSDL PRIVATE ${SDL_INCLUDE_DIR})
 
 	IF (WIN32)
         find_package(OpenGL REQUIRED)
         target_link_libraries(videoSDL PRIVATE ${OPENGL_gl_LIBRARY}) 
-        target_include_directories(videoSDL PRIVATE ${OPENGL_INCLUDE_DIR})
+        target_include_directories(videoSDL PRIVATE ${OPENGL_INCLUDE_DIR} ${PROJECT_SOURCE_DIR}/data/win32)
         include(GatherDll)
         gather_dll_by_name(SDL SDL.dll)
 	ENDIF()

From 0c6e8bc7772389785df5c42a78ab37391e77a5db Mon Sep 17 00:00:00 2001
From: Flamefire <Flamefire@users.noreply.github.com>
Date: Thu, 15 Aug 2019 10:57:43 +0200
Subject: [PATCH 2/2] Fix CMake formatting of driver CMakeLists

---
 extras/audioDrivers/SDL/CMakeLists.txt    | 38 +++++++++----------
 extras/videoDrivers/SDL/CMakeLists.txt    | 46 +++++++++++------------
 extras/videoDrivers/WinAPI/CMakeLists.txt | 18 ++++-----
 3 files changed, 51 insertions(+), 51 deletions(-)

diff --git a/extras/audioDrivers/SDL/CMakeLists.txt b/extras/audioDrivers/SDL/CMakeLists.txt
index be3628cf8..de8f13a5f 100644
--- a/extras/audioDrivers/SDL/CMakeLists.txt
+++ b/extras/audioDrivers/SDL/CMakeLists.txt
@@ -1,23 +1,23 @@
 set(SDL_BUILDING_LIBRARY ON)
-FIND_PACKAGE(SDL_mixer)
+find_package(SDL_mixer)
 
-IF(NOT SDL_MIXER_FOUND)
-	MESSAGE(WARNING ": SDL_mixer library not found: Not building SDL audiodriver")
-ELSE()
-	IF (WIN32)
-        include(GatherDll)
-        gather_dll(SDL_MIXER)
-        gather_dll_by_name(VORBIS libvorbis-0.dll)
-        gather_dll_by_name(VORBISFILE libvorbisfile-3.dll)
-        gather_dll_by_name(OGG libogg-0.dll)
-	ENDIF ()
+if(NOT SDL_MIXER_FOUND)
+  message(WARNING "SDL_mixer library not found: Not building SDL audiodriver")
+else()
+  if(WIN32)
+    include(GatherDll)
+    gather_dll(SDL_MIXER)
+    gather_dll_by_name(VORBIS libvorbis-0.dll)
+    gather_dll_by_name(VORBISFILE libvorbisfile-3.dll)
+    gather_dll_by_name(OGG libogg-0.dll)
+  endif()
 
-	ADD_LIBRARY(audioSDL SHARED ${RTTR_DRIVER_INTERFACE} AudioSDL.cpp AudioSDL.h SoundSDL_Effect.h SoundSDL_Music.h)
-	TARGET_LINK_LIBRARIES(audioSDL PRIVATE audiodrv SDL_mixer::SDL_mixer)
+  add_library(audioSDL SHARED ${RTTR_DRIVER_INTERFACE} AudioSDL.cpp AudioSDL.h SoundSDL_Effect.h SoundSDL_Music.h)
+  target_link_libraries(audioSDL PRIVATE audiodrv SDL_mixer::SDL_mixer)
 
-	INSTALL(TARGETS audioSDL
-		RUNTIME DESTINATION ${RTTR_DRIVERDIR}/audio
-		LIBRARY DESTINATION ${RTTR_DRIVERDIR}/audio
-	)
-	add_dependencies(drivers audioSDL)
-ENDIF ()
+  install(TARGETS audioSDL
+    RUNTIME DESTINATION ${RTTR_DRIVERDIR}/audio
+    LIBRARY DESTINATION ${RTTR_DRIVERDIR}/audio
+  )
+  add_dependencies(drivers audioSDL)
+endif()
diff --git a/extras/videoDrivers/SDL/CMakeLists.txt b/extras/videoDrivers/SDL/CMakeLists.txt
index 016a8beb2..2906f9c48 100644
--- a/extras/videoDrivers/SDL/CMakeLists.txt
+++ b/extras/videoDrivers/SDL/CMakeLists.txt
@@ -1,28 +1,28 @@
 set(SDL_BUILDING_LIBRARY ON)
-FIND_PACKAGE(SDL)
+find_package(SDL)
 
-IF (SDL_FOUND)
-	FIND_PACKAGE(Boost 1.64.0 REQUIRED)
-	include(CorrectLib)	
-	CORRECT_LIB(SDL_LIBRARY SDL)
+if(SDL_FOUND)
+  find_package(Boost 1.64.0 REQUIRED)
+  include(CorrectLib)
+  correct_lib(SDL_LIBRARY SDL)
 
-	ADD_LIBRARY(videoSDL SHARED ${RTTR_DRIVER_INTERFACE} VideoSDL.cpp VideoSDL.h)
-	target_link_libraries(videoSDL PRIVATE videodrv ${SDL_LIBRARY} nowide::static)
-	target_include_directories(videoSDL PRIVATE ${SDL_INCLUDE_DIR})
+  add_library(videoSDL SHARED ${RTTR_DRIVER_INTERFACE} VideoSDL.cpp VideoSDL.h)
+  target_link_libraries(videoSDL PRIVATE videodrv s25util ${SDL_LIBRARY} Boost::boost nowide::static)
+  target_include_directories(videoSDL PRIVATE ${SDL_INCLUDE_DIR})
 
-	IF (WIN32)
-        find_package(OpenGL REQUIRED)
-        target_link_libraries(videoSDL PRIVATE ${OPENGL_gl_LIBRARY}) 
-        target_include_directories(videoSDL PRIVATE ${OPENGL_INCLUDE_DIR} ${PROJECT_SOURCE_DIR}/data/win32)
-        include(GatherDll)
-        gather_dll_by_name(SDL SDL.dll)
-	ENDIF()
+  if(WIN32)
+    find_package(OpenGL REQUIRED)
+    target_link_libraries(videoSDL PRIVATE ${OPENGL_gl_LIBRARY})
+    target_include_directories(videoSDL PRIVATE ${OPENGL_INCLUDE_DIR} ${PROJECT_SOURCE_DIR}/data/win32)
+    include(GatherDll)
+    gather_dll_by_name(SDL SDL.dll)
+  endif()
 
-	INSTALL(TARGETS videoSDL
-		RUNTIME DESTINATION ${RTTR_DRIVERDIR}/video
-		LIBRARY DESTINATION ${RTTR_DRIVERDIR}/video
-	)
-	add_dependencies(drivers videoSDL)
-ELSE ()
-	MESSAGE(WARNING ": SDL library not found: Not building SDL videodriver")
-ENDIF ()
+  install(TARGETS videoSDL
+    RUNTIME DESTINATION ${RTTR_DRIVERDIR}/video
+    LIBRARY DESTINATION ${RTTR_DRIVERDIR}/video
+  )
+  add_dependencies(drivers videoSDL)
+else()
+  message(WARNING "SDL library not found: Not building SDL videodriver")
+endif()
diff --git a/extras/videoDrivers/WinAPI/CMakeLists.txt b/extras/videoDrivers/WinAPI/CMakeLists.txt
index ad37deaab..dc5349ca5 100644
--- a/extras/videoDrivers/WinAPI/CMakeLists.txt
+++ b/extras/videoDrivers/WinAPI/CMakeLists.txt
@@ -1,11 +1,11 @@
-IF (WIN32)
-	FIND_PACKAGE(Boost 1.64.0 REQUIRED)
-    find_package(OpenGL REQUIRED)
+if(WIN32)
+  find_package(Boost 1.64.0 REQUIRED)
+  find_package(OpenGL REQUIRED)
 
-	ADD_LIBRARY(videoWinAPI SHARED ${RTTR_DRIVER_INTERFACE} WinAPI.cpp WinAPI.h)
-	TARGET_LINK_LIBRARIES(videoWinAPI PRIVATE videodrv s25util gdi32 user32 ${OPENGL_gl_LIBRARY} Boost::boost) 
-    target_include_directories(videoWinAPI SYSTEM PRIVATE ${OPENGL_INCLUDE_DIR} ${PROJECT_SOURCE_DIR}/data/win32)
+  add_library(videoWinAPI SHARED ${RTTR_DRIVER_INTERFACE} WinAPI.cpp WinAPI.h)
+  target_link_libraries(videoWinAPI PRIVATE videodrv s25util gdi32 user32 ${OPENGL_gl_LIBRARY} Boost::boost)
+  target_include_directories(videoWinAPI SYSTEM PRIVATE ${OPENGL_INCLUDE_DIR} ${PROJECT_SOURCE_DIR}/data/win32)
 
-	INSTALL(TARGETS videoWinAPI RUNTIME DESTINATION ${RTTR_DRIVERDIR}/video)
-	add_dependencies(drivers videoWinAPI)
-ENDIF ()
+  install(TARGETS videoWinAPI RUNTIME DESTINATION ${RTTR_DRIVERDIR}/video)
+  add_dependencies(drivers videoWinAPI)
+endif()
