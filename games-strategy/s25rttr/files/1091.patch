From 9cfa817e9eec24848a521a2b6bbb7429562babaa Mon Sep 17 00:00:00 2001
From: Flamefire <Flamefire@users.noreply.github.com>
Date: Mon, 12 Aug 2019 11:04:29 +0200
Subject: [PATCH 1/2] Update libsamplerate and fix tests

On 0.1.9 returning NULL as the data pointer is not allowed even if the
size is zero and the pointer never used.
Fixes #1090
---
 tests/libsamplerate_cpp/testSamplerate.cpp | 22 +++++++++++++++-------
 1 files changed, 15 insertions(+), 7 deletions(-)

diff --git a/tests/libsamplerate_cpp/testSamplerate.cpp b/tests/libsamplerate_cpp/testSamplerate.cpp
index 122388c5c..9100ed6ab 100644
--- a/tests/libsamplerate_cpp/testSamplerate.cpp
+++ b/tests/libsamplerate_cpp/testSamplerate.cpp
@@ -19,17 +19,24 @@
 
 #include <boost/test/unit_test.hpp>
 #include <algorithm>
+#include <array>
 #include <cmath>
 #include <samplerate.hpp>
 #include <vector>
 
-static int test_data = 42;
+namespace {
+int test_data = 42;
+int callback_pos = 0;
+std::array<float, 512> callback_data{};
+} // namespace
 
 long callback(void* cb_data, float** data)
 {
     BOOST_TEST(cb_data == &test_data);
-    *data = nullptr;
-    return test_data;
+    *data = callback_data.data() + callback_pos;
+    const auto size = std::min<long>(callback_data.size() - callback_pos, 128);
+    callback_pos += size;
+    return size;
 }
 
 BOOST_AUTO_TEST_CASE(InvalidCtorParamsThrow)
@@ -87,10 +94,11 @@ BOOST_AUTO_TEST_CASE(MoveDoesNotCopy)
 BOOST_AUTO_TEST_CASE(SimpleCallback)
 {
     samplerate::StateCallback state(samplerate::Converter::Linear, 1, callback, &test_data);
-    test_data = 0;
-    std::vector<float> out(10);
-    const auto written = state.read(2, out.size(), out.data());
-    BOOST_TEST(written == 0);
+    auto const ratio = 2;
+    std::vector<float> out(callback_data.size() * ratio);
+    callback_pos = 0;
+    const auto written = state.read(ratio, out.size(), out.data());
+    BOOST_TEST(written == out.size());
 }
 
 BOOST_AUTO_TEST_CASE(ConversionWorks)

From fc6a390c0adceac59c3d691a72ee02128c0c9cb9 Mon Sep 17 00:00:00 2001
From: Flamefire <Flamefire@users.noreply.github.com>
Date: Mon, 12 Aug 2019 12:32:50 +0200
Subject: [PATCH 2/2] Fix running tests 1 at a time

---
 tests/s25Main/UI/testSmartBitmap.cpp | 5 +++++
 tests/s25Main/UI/testVideoDriver.cpp | 2 +-
 2 files changed, 6 insertions(+), 1 deletion(-)

diff --git a/tests/s25Main/UI/testSmartBitmap.cpp b/tests/s25Main/UI/testSmartBitmap.cpp
index 7011fb309..b795d190a 100644
--- a/tests/s25Main/UI/testSmartBitmap.cpp
+++ b/tests/s25Main/UI/testSmartBitmap.cpp
@@ -18,6 +18,7 @@
 #include "Loader.h"
 #include "PointOutput.h"
 #include "macros.h"
+#include "uiHelper/uiHelpers.hpp"
 #include <libsiedler2/ArchivItem_Bitmap_Player.h>
 #include <libsiedler2/ArchivItem_Bitmap_Raw.h>
 #include <libsiedler2/ArchivItem_Palette.h>
@@ -81,6 +82,8 @@ std::unique_ptr<ArchivItem_Bitmap_Player> createRandPlayerBmp(unsigned percentTr
 }
 } // namespace
 
+BOOST_FIXTURE_TEST_SUITE(SmartBmpSuite, uiHelper::Fixture)
+
 BOOST_AUTO_TEST_CASE(CreateRandBmp_Works)
 {
     const auto bmp = createRandBmp(50);
@@ -271,3 +274,5 @@ BOOST_AUTO_TEST_CASE(MultiPlayerBitmap)
         BOOST_TEST(buffer.get(pt.x, pt.y) == expectedColor);
     }
 }
+
+BOOST_AUTO_TEST_SUITE_END()
diff --git a/tests/s25Main/UI/testVideoDriver.cpp b/tests/s25Main/UI/testVideoDriver.cpp
index e19f4f2b1..5e8ace453 100644
--- a/tests/s25Main/UI/testVideoDriver.cpp
+++ b/tests/s25Main/UI/testVideoDriver.cpp
@@ -71,7 +71,7 @@ void APIENTRY glDeleteTextures(GLsizei n, const GLuint* textures)
 RTTR_POP_DIAGNOSTIC
 } // namespace rttrOglMock2
 
-BOOST_AUTO_TEST_CASE(CreateAndDestroyTextures)
+BOOST_FIXTURE_TEST_CASE(CreateAndDestroyTextures, uiHelper::Fixture)
 {
     // Fresh start
     VIDEODRIVER.DestroyScreen();
