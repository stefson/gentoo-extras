diff --git a/python/l10n/fluent_migrations/bug_1812135_newtab_moz_toggle_labels.py b/python/l10n/fluent_migrations/bug_1812135_newtab_moz_toggle_labels.py
deleted file mode 100644
index 27db47b..0000000
--- a/python/l10n/fluent_migrations/bug_1812135_newtab_moz_toggle_labels.py
+++ /dev/null
@@ -1,30 +0,0 @@
-# Any copyright is dedicated to the Public Domain.
-# http://creativecommons.org/publicdomain/zero/1.0/
-
-import fluent.syntax.ast as FTL
-from fluent.migrate.helpers import transforms_from
-
-
-def migrate(ctx):
-    """Bug 1812135 - Convert some newtab customiation panel strings to use a label, part {index}"""
-
-    translations_ftl = "browser/browser/newtab/newtab.ftl"
-
-    ctx.add_transforms(
-        translations_ftl,
-        translations_ftl,
-        transforms_from(
-            """
-newtab-custom-shortcuts-toggle =
-  .label = {COPY_PATTERN(from_path, "newtab-custom-shortcuts-title")}
-  .description = {COPY_PATTERN(from_path, "newtab-custom-shortcuts-subtitle")}
-newtab-custom-pocket-toggle =
-  .label = {COPY_PATTERN(from_path, "newtab-custom-pocket-title")}
-  .description = {COPY_PATTERN(from_path, "newtab-custom-pocket-subtitle")}
-newtab-custom-recent-toggle =
-  .label = {COPY_PATTERN(from_path, "newtab-custom-recent-title")}
-  .description = {COPY_PATTERN(from_path, "newtab-custom-recent-subtitle")}
-""",
-            from_path=translations_ftl,
-        ),
-    )
diff --git a/python/l10n/fluent_migrations/bug_1844783_mozMessageBarShopping.py b/python/l10n/fluent_migrations/bug_1844783_mozMessageBarShopping.py
deleted file mode 100644
index 4688396..0000000
--- a/python/l10n/fluent_migrations/bug_1844783_mozMessageBarShopping.py
+++ /dev/null
@@ -1,45 +0,0 @@
-# Any copyright is dedicated to the Public Domain.
-# http://creativecommons.org/publicdomain/zero/1.0/
-
-from fluent.migrate import COPY_PATTERN
-from fluent.migrate.helpers import transforms_from
-
-
-def migrate(ctx):
-    """Bug 1844783 - Use new moz-message-bar in shopping components, part {index}."""
-    shopping_ftl = "browser/browser/shopping.ftl"
-    ctx.add_transforms(
-        shopping_ftl,
-        shopping_ftl,
-        transforms_from(
-            """
-shopping-message-bar-generic-error =
-    .heading = {COPY_PATTERN(from_path, "shopping-message-bar-generic-error-title2")}
-    .message = {COPY_PATTERN(from_path, "shopping-message-bar-generic-error-message")}
-
-shopping-message-bar-warning-not-enough-reviews =
-    .heading = {COPY_PATTERN(from_path, "shopping-message-bar-warning-not-enough-reviews-title")}
-    .message = {COPY_PATTERN(from_path, "shopping-message-bar-warning-not-enough-reviews-message2")}
-
-shopping-message-bar-warning-product-not-available =
-    .heading = {COPY_PATTERN(from_path, "shopping-message-bar-warning-product-not-available-title")}
-    .message = {COPY_PATTERN(from_path, "shopping-message-bar-warning-product-not-available-message2")}
-
-shopping-message-bar-thanks-for-reporting =
-    .heading = {COPY_PATTERN(from_path, "shopping-message-bar-thanks-for-reporting-title")}
-    .message = {COPY_PATTERN(from_path, "shopping-message-bar-thanks-for-reporting-message2")}
-
-shopping-message-bar-warning-product-not-available-reported =
-    .heading = {COPY_PATTERN(from_path, "shopping-message-bar-warning-product-not-available-reported-title2")}
-    .message = {COPY_PATTERN(from_path, "shopping-message-bar-warning-product-not-available-reported-message2")}
-
-shopping-message-bar-page-not-supported =
-    .heading = {COPY_PATTERN(from_path, "shopping-message-bar-page-not-supported-title")}
-    .message = {COPY_PATTERN(from_path, "shopping-message-bar-page-not-supported-message")}
-
-shopping-survey-thanks =
-    .heading = {COPY_PATTERN(from_path, "shopping-survey-thanks-message")}
-""",
-            from_path=shopping_ftl,
-        ),
-    )
diff --git a/python/l10n/fluent_migrations/bug_1844850_mozMessageBar_unifiedExtensionsPanel.py b/python/l10n/fluent_migrations/bug_1844850_mozMessageBar_unifiedExtensionsPanel.py
deleted file mode 100644
index b7a4c91..0000000
--- a/python/l10n/fluent_migrations/bug_1844850_mozMessageBar_unifiedExtensionsPanel.py
+++ /dev/null
@@ -1,36 +0,0 @@
-# Any copyright is dedicated to the Public Domain.
-# http://creativecommons.org/publicdomain/zero/1.0/
-
-import fluent.syntax.ast as FTL
-
-from fluent.migrate import COPY_PATTERN
-
-
-def migrate(ctx):
-    """Bug 1844850 - Use moz-message-bar in the unified extensions panel, part {index}."""
-    unifiedExtensions_ftl = "browser/browser/unifiedExtensions.ftl"
-    ctx.add_transforms(
-        unifiedExtensions_ftl,
-        unifiedExtensions_ftl,
-        [
-            FTL.Message(
-                id=FTL.Identifier("unified-extensions-mb-quarantined-domain-message-3"),
-                attributes=[
-                    FTL.Attribute(
-                        id=FTL.Identifier("heading"),
-                        value=COPY_PATTERN(
-                            unifiedExtensions_ftl,
-                            "unified-extensions-mb-quarantined-domain-title",
-                        ),
-                    ),
-                    FTL.Attribute(
-                        id=FTL.Identifier("message"),
-                        value=COPY_PATTERN(
-                            unifiedExtensions_ftl,
-                            "unified-extensions-mb-quarantined-domain-message-2",
-                        ),
-                    ),
-                ],
-            ),
-        ],
-    )
diff --git a/python/l10n/fluent_migrations/bug_1851877_mozMessageBar_aboutAddons_uninstallBar.py b/python/l10n/fluent_migrations/bug_1851877_mozMessageBar_aboutAddons_uninstallBar.py
deleted file mode 100644
index 878cc01..0000000
--- a/python/l10n/fluent_migrations/bug_1851877_mozMessageBar_aboutAddons_uninstallBar.py
+++ /dev/null
@@ -1,41 +0,0 @@
-# Any copyright is dedicated to the Public Domain.
-# http://creativecommons.org/publicdomain/zero/1.0/
-
-import fluent.syntax.ast as FTL
-from fluent.migrate.transforms import TransformPattern
-
-
-class STRIP_SPAN(TransformPattern):
-    # Used to remove `<span data-l10n-name="addon-name"></span>` from a string
-    def visit_TextElement(self, node):
-        span_start = node.value.find('<span data-l10n-name="addon-name">')
-        span_end = node.value.find("</span>")
-        if span_start != -1 and span_end == -1:
-            node.value = node.value[:span_start]
-        elif span_start == -1 and span_end != -1:
-            node.value = node.value[span_end + 7 :]
-
-        return node
-
-
-def migrate(ctx):
-    """Bug 1851877 - Use moz-message-bar to replace the pending uninstall bar in about:addons, part {index}."""
-    aboutAddons_ftl = "toolkit/toolkit/about/aboutAddons.ftl"
-    ctx.add_transforms(
-        aboutAddons_ftl,
-        aboutAddons_ftl,
-        [
-            FTL.Message(
-                id=FTL.Identifier("pending-uninstall-description2"),
-                attributes=[
-                    FTL.Attribute(
-                        id=FTL.Identifier("message"),
-                        value=STRIP_SPAN(
-                            aboutAddons_ftl,
-                            "pending-uninstall-description",
-                        ),
-                    ),
-                ],
-            ),
-        ],
-    )
diff --git a/python/l10n/fluent_migrations/bug_1854425_default_agent.py b/python/l10n/fluent_migrations/bug_1854425_default_agent.py
deleted file mode 100644
index 500eb18..0000000
--- a/python/l10n/fluent_migrations/bug_1854425_default_agent.py
+++ /dev/null
@@ -1,58 +0,0 @@
-# Any copyright is dedicated to the Public Domain.
-# http://creativecommons.org/publicdomain/zero/1.0/
-
-import fluent.syntax.ast as FTL
-from fluent.migrate.helpers import TERM_REFERENCE
-from fluent.migrate.transforms import REPLACE, COPY
-
-
-def migrate(ctx):
-    """Bug 1854425 - Migrate defaultagent_localized.ini to Fluent, part {index}."""
-
-    source = "browser/defaultagent/defaultagent_localized.ini"
-    target = "browser/browser/backgroundtasks/defaultagent.ftl"
-
-    ctx.add_transforms(
-        target,
-        target,
-        [
-            FTL.Message(
-                id=FTL.Identifier("default-browser-agent-task-description"),
-                value=REPLACE(
-                    source,
-                    "DefaultBrowserAgentTaskDescription",
-                    {
-                        "%MOZ_APP_DISPLAYNAME%": TERM_REFERENCE("brand-short-name"),
-                    },
-                ),
-            ),
-            FTL.Message(
-                id=FTL.Identifier("default-browser-notification-header-text"),
-                value=REPLACE(
-                    source,
-                    "DefaultBrowserNotificationHeaderText",
-                    {
-                        "%MOZ_APP_DISPLAYNAME%": TERM_REFERENCE("brand-short-name"),
-                    },
-                ),
-            ),
-            FTL.Message(
-                id=FTL.Identifier("default-browser-notification-body-text"),
-                value=REPLACE(
-                    source,
-                    "DefaultBrowserNotificationBodyText",
-                    {
-                        "%MOZ_APP_DISPLAYNAME%": TERM_REFERENCE("brand-short-name"),
-                    },
-                ),
-            ),
-            FTL.Message(
-                id=FTL.Identifier("default-browser-notification-yes-button-text"),
-                value=COPY(source, "DefaultBrowserNotificationYesButtonText"),
-            ),
-            FTL.Message(
-                id=FTL.Identifier("default-browser-notification-no-button-text"),
-                value=COPY(source, "DefaultBrowserNotificationNoButtonText"),
-            ),
-        ],
-    )
diff --git a/python/mach/mach/command_util.py b/python/mach/mach/command_util.py
index 052d40a..c485257 100644
--- a/python/mach/mach/command_util.py
+++ b/python/mach/mach/command_util.py
@@ -5,15 +5,13 @@
 import argparse
 import ast
 import errno
+import imp
 import sys
-import types
 import uuid
 from collections.abc import Iterable
 from pathlib import Path
 from typing import Dict, Optional, Union
 
-from mozfile import load_source
-
 from .base import MissingFileError
 
 INVALID_ENTRY_POINT = r"""
@@ -413,13 +411,13 @@ def load_commands_from_file(path: Union[str, Path], module_name=None):
         # Ensure parent module is present otherwise we'll (likely) get
         # an error due to unknown parent.
         if "mach.commands" not in sys.modules:
-            mod = types.ModuleType("mach.commands")
+            mod = imp.new_module("mach.commands")
             sys.modules["mach.commands"] = mod
 
         module_name = f"mach.commands.{uuid.uuid4().hex}"
 
     try:
-        load_source(module_name, str(path))
+        imp.load_source(module_name, str(path))
     except IOError as e:
         if e.errno != errno.ENOENT:
             raise
diff --git a/python/mach/mach/config.py b/python/mach/mach/config.py
index 8aeb634..5428a9e 100644
--- a/python/mach/mach/config.py
+++ b/python/mach/mach/config.py
@@ -309,7 +309,7 @@ class ConfigSettings(collections.abc.Mapping):
         """Load config data by reading file objects."""
 
         for fp in fps:
-            self._config.read_file(fp)
+            self._config.readfp(fp)
 
     def write(self, fh):
         """Write the config to a file object."""
diff --git a/python/mach/mach/mixin/process.py b/python/mach/mach/mixin/process.py
index f9b5046..b1692cc 100644
--- a/python/mach/mach/mixin/process.py
+++ b/python/mach/mach/mixin/process.py
@@ -126,7 +126,7 @@ class ProcessExecutionMixin(LoggingMixin):
                 except LineHandlingEarlyReturn:
                     return
 
-            if not log_name:
+            if line.startswith("BUILDTASK") or not log_name:
                 return
 
             self.log(log_level, log_name, {"line": line.rstrip()}, "{line}")
diff --git a/python/mach/mach/telemetry.py b/python/mach/mach/telemetry.py
index 1ec29b3..2335565 100644
--- a/python/mach/mach/telemetry.py
+++ b/python/mach/mach/telemetry.py
@@ -23,7 +23,6 @@ from mach.telemetry_interface import GleanTelemetry, NoopTelemetry
 from mach.util import get_state_dir
 
 MACH_METRICS_PATH = (Path(__file__) / ".." / ".." / "metrics.yaml").resolve()
-SITE_DIR = (Path(__file__) / ".." / ".." / ".." / "sites").resolve()
 
 
 def create_telemetry_from_environment(settings):
@@ -37,17 +36,16 @@ def create_telemetry_from_environment(settings):
     """
 
     active_metadata = MozSiteMetadata.from_runtime()
-    mach_sites = [site_path.stem for site_path in SITE_DIR.glob("*.txt")]
-    is_a_mach_virtualenv = active_metadata and active_metadata.site_name in mach_sites
+    is_mach_virtualenv = active_metadata and active_metadata.site_name == "mach"
 
     if not (
         is_applicable_telemetry_environment()
         # Glean is not compatible with Python 2
         and sys.version_info >= (3, 0)
-        # If not using a mach virtualenv (e.g.: bootstrap uses native python)
+        # If not using the mach virtualenv (e.g.: bootstrap uses native python)
         # then we can't guarantee that the glean package that we import is a
         # compatible version. Therefore, don't use glean.
-        and is_a_mach_virtualenv
+        and is_mach_virtualenv
     ):
         return NoopTelemetry(False)
 
diff --git a/python/mach/mach/test/test_entry_point.py b/python/mach/mach/test/test_entry_point.py
index 11aa083..1129eba 100644
--- a/python/mach/mach/test/test_entry_point.py
+++ b/python/mach/mach/test/test_entry_point.py
@@ -1,8 +1,8 @@
 # This Source Code Form is subject to the terms of the Mozilla Public
 # License, v. 2.0. If a copy of the MPL was not distributed with this
 # file, You can obtain one at http://mozilla.org/MPL/2.0/.
+import imp
 import sys
-import types
 from pathlib import Path
 from unittest.mock import patch
 
@@ -38,7 +38,7 @@ class TestEntryPoints(TestBase):
         # Ensure parent module is present otherwise we'll (likely) get
         # an error due to unknown parent.
         if "mach.commands" not in sys.modules:
-            mod = types.ModuleType("mach.commands")
+            mod = imp.new_module("mach.commands")
             sys.modules["mach.commands"] = mod
 
         mock.return_value = [Entry([self.provider_dir])]
diff --git a/python/mozboot/mozboot/base.py b/python/mozboot/mozboot/base.py
index d709fb8..c32946c 100644
--- a/python/mozboot/mozboot/base.py
+++ b/python/mozboot/mozboot/base.py
@@ -494,7 +494,7 @@ class BaseBootstrapper(object):
             # path and move on.
             return None
 
-        match = re.search(name + r" ([a-z0-9\.]+)", process.stdout)
+        match = re.search(name + " ([a-z0-9\.]+)", process.stdout)
         if not match:
             print("ERROR! Unable to identify %s version." % name)
             return None
diff --git a/python/mozboot/mozboot/util.py b/python/mozboot/mozboot/util.py
index 47c35e6..583c08b 100644
--- a/python/mozboot/mozboot/util.py
+++ b/python/mozboot/mozboot/util.py
@@ -11,7 +11,7 @@ import certifi
 from mach.site import PythonVirtualenv
 from mach.util import get_state_dir
 
-MINIMUM_RUST_VERSION = "1.70.0"
+MINIMUM_RUST_VERSION = "1.66.0"
 
 
 def get_tools_dir(srcdir=False):
diff --git a/python/mozbuild/mozbuild/action/buildlist.py b/python/mozbuild/mozbuild/action/buildlist.py
index ed7149e..ab32ad9 100644
--- a/python/mozbuild/mozbuild/action/buildlist.py
+++ b/python/mozbuild/mozbuild/action/buildlist.py
@@ -11,6 +11,7 @@ import io
 import os
 import sys
 
+from mozbuild.action.util import log_build_task
 from mozbuild.util import ensureParentDir, lock_file
 
 
@@ -45,4 +46,4 @@ def main(args):
 
 
 if __name__ == "__main__":
-    sys.exit(main(sys.argv[1:]))
+    sys.exit(log_build_task(main, sys.argv[1:]))
diff --git a/python/mozbuild/mozbuild/action/check_binary.py b/python/mozbuild/mozbuild/action/check_binary.py
index b30635b..5f8bc73 100644
--- a/python/mozbuild/mozbuild/action/check_binary.py
+++ b/python/mozbuild/mozbuild/action/check_binary.py
@@ -12,6 +12,7 @@ import buildconfig
 from mozpack.executables import ELF, UNKNOWN, get_type
 from packaging.version import Version
 
+from mozbuild.action.util import log_build_task
 from mozbuild.util import memoize
 
 STDCXX_MAX_VERSION = Version("3.4.19")
@@ -324,4 +325,4 @@ def main(args):
 
 
 if __name__ == "__main__":
-    sys.exit(main(sys.argv[1:]))
+    sys.exit(log_build_task(main, sys.argv[1:]))
diff --git a/python/mozbuild/mozbuild/action/file_generate.py b/python/mozbuild/mozbuild/action/file_generate.py
index 5cb479e..98dec4e 100644
--- a/python/mozbuild/mozbuild/action/file_generate.py
+++ b/python/mozbuild/mozbuild/action/file_generate.py
@@ -15,6 +15,7 @@ import traceback
 import buildconfig
 import six
 
+from mozbuild.action.util import log_build_task
 from mozbuild.makeutil import Makefile
 from mozbuild.pythonutil import iter_modules_in_path
 from mozbuild.util import FileAvoidWrite
@@ -151,4 +152,4 @@ def main(argv):
 
 
 if __name__ == "__main__":
-    sys.exit(main(sys.argv[1:]))
+    sys.exit(log_build_task(main, sys.argv[1:]))
diff --git a/python/mozbuild/mozbuild/action/jar_maker.py b/python/mozbuild/mozbuild/action/jar_maker.py
index 72e9e97..a244b66 100644
--- a/python/mozbuild/mozbuild/action/jar_maker.py
+++ b/python/mozbuild/mozbuild/action/jar_maker.py
@@ -5,6 +5,7 @@
 import sys
 
 import mozbuild.jar
+from mozbuild.action.util import log_build_task
 
 
 def main(args):
@@ -12,4 +13,4 @@ def main(args):
 
 
 if __name__ == "__main__":
-    sys.exit(main(sys.argv[1:]))
+    sys.exit(log_build_task(main, sys.argv[1:]))
diff --git a/python/mozbuild/mozbuild/action/preprocessor.py b/python/mozbuild/mozbuild/action/preprocessor.py
index 41b1ec8..c59a05a 100644
--- a/python/mozbuild/mozbuild/action/preprocessor.py
+++ b/python/mozbuild/mozbuild/action/preprocessor.py
@@ -4,6 +4,7 @@
 
 import sys
 
+from mozbuild.action.util import log_build_task
 from mozbuild.preprocessor import Preprocessor
 
 
@@ -20,4 +21,4 @@ def main(args):
 
 
 if __name__ == "__main__":
-    main(sys.argv[1:])
+    log_build_task(main, sys.argv[1:])
diff --git a/python/mozbuild/mozbuild/action/process_install_manifest.py b/python/mozbuild/mozbuild/action/process_install_manifest.py
index 4db95ec..89b2f89 100644
--- a/python/mozbuild/mozbuild/action/process_install_manifest.py
+++ b/python/mozbuild/mozbuild/action/process_install_manifest.py
@@ -12,6 +12,7 @@ from mozpack.errors import errors
 from mozpack.files import BaseFile, FileFinder
 from mozpack.manifests import InstallManifest
 
+from mozbuild.action.util import log_build_task
 from mozbuild.util import DefinesAction
 
 COMPLETE = (
@@ -120,4 +121,4 @@ def main(argv):
 
 
 if __name__ == "__main__":
-    main(sys.argv[1:])
+    log_build_task(main, sys.argv[1:])
diff --git a/python/mozbuild/mozbuild/action/test_archive.py b/python/mozbuild/mozbuild/action/test_archive.py
index af761ea..36ebf7a 100644
--- a/python/mozbuild/mozbuild/action/test_archive.py
+++ b/python/mozbuild/mozbuild/action/test_archive.py
@@ -287,13 +287,6 @@ ARCHIVE_FILES = {
             "pattern": "specialpowers/**",
             "dest": "mochitest/extensions",
         },
-        # Needed by Windows a11y browser tests.
-        {
-            "source": buildconfig.topobjdir,
-            "base": "accessible/interfaces/ia2",
-            "pattern": "IA2Typelib.tlb",
-            "dest": "mochitest",
-        },
     ],
     "mozharness": [
         {
diff --git a/python/mozbuild/mozbuild/action/util.py b/python/mozbuild/mozbuild/action/util.py
new file mode 100644
index 0000000..d410262
--- /dev/null
+++ b/python/mozbuild/mozbuild/action/util.py
@@ -0,0 +1,24 @@
+# This Source Code Form is subject to the terms of the Mozilla Public
+# License, v. 2.0. If a copy of the MPL was not distributed with this
+# file, You can obtain one at http://mozilla.org/MPL/2.0/.
+
+import json
+import sys
+import time
+
+
+def log_build_task(f, *args, **kwargs):
+    """Run the given function, representing an entire build task, and log the
+    BUILDTASK metadata row to stdout.
+    """
+    start = time.monotonic()
+    try:
+        return f(*args, **kwargs)
+    finally:
+        end = time.monotonic()
+        print(
+            "BUILDTASK %s"
+            % json.dumps(
+                {"argv": sys.argv, "start": start, "end": end, "context": None}
+            )
+        )
diff --git a/python/mozbuild/mozbuild/action/webidl.py b/python/mozbuild/mozbuild/action/webidl.py
index ade25b4..81c2c2a 100644
--- a/python/mozbuild/mozbuild/action/webidl.py
+++ b/python/mozbuild/mozbuild/action/webidl.py
@@ -6,6 +6,8 @@ import sys
 
 from mozwebidlcodegen import create_build_system_manager
 
+from mozbuild.action.util import log_build_task
+
 
 def main(argv):
     """Perform WebIDL code generation required by the build system."""
@@ -14,4 +16,4 @@ def main(argv):
 
 
 if __name__ == "__main__":
-    sys.exit(main(sys.argv[1:]))
+    sys.exit(log_build_task(main, sys.argv[1:]))
diff --git a/python/mozbuild/mozbuild/action/xpidl-process.py b/python/mozbuild/mozbuild/action/xpidl-process.py
index 0a126c7..99f2a83 100755
--- a/python/mozbuild/mozbuild/action/xpidl-process.py
+++ b/python/mozbuild/mozbuild/action/xpidl-process.py
@@ -20,6 +20,7 @@ from xpidl.rust import print_rust_bindings
 from xpidl.rust_macros import print_rust_macros_bindings
 from xpidl.xpidl import IDLParser
 
+from mozbuild.action.util import log_build_task
 from mozbuild.makeutil import Makefile
 from mozbuild.pythonutil import iter_modules_in_path
 from mozbuild.util import FileAvoidWrite
@@ -149,4 +150,4 @@ def main(argv):
 
 
 if __name__ == "__main__":
-    main(sys.argv[1:])
+    log_build_task(main, sys.argv[1:])
diff --git a/python/mozbuild/mozbuild/action/zip.py b/python/mozbuild/mozbuild/action/zip.py
index 327147b..e0dcbe0 100644
--- a/python/mozbuild/mozbuild/action/zip.py
+++ b/python/mozbuild/mozbuild/action/zip.py
@@ -14,6 +14,8 @@ from mozpack.errors import errors
 from mozpack.files import FileFinder
 from mozpack.path import match
 
+from mozbuild.action.util import log_build_task
+
 
 def main(args):
     parser = argparse.ArgumentParser()
@@ -47,4 +49,4 @@ def main(args):
 
 
 if __name__ == "__main__":
-    main(sys.argv[1:])
+    log_build_task(main, sys.argv[1:])
diff --git a/python/mozbuild/mozbuild/artifacts.py b/python/mozbuild/mozbuild/artifacts.py
index 0051f5e..b794ecd 100644
--- a/python/mozbuild/mozbuild/artifacts.py
+++ b/python/mozbuild/mozbuild/artifacts.py
@@ -100,6 +100,7 @@ class ArtifactJob(object):
     ]
     # The list below list should be updated when we have new ESRs.
     esr_candidate_trees = [
+        "releases/mozilla-esr102",
         "releases/mozilla-esr115",
     ]
     try_tree = "try"
@@ -841,6 +842,7 @@ class ThunderbirdMixin(object):
     ]
     # The list below list should be updated when we have new ESRs.
     esr_candidate_trees = [
+        "releases/comm-esr102",
         "releases/comm-esr115",
     ]
 
diff --git a/python/mozbuild/mozbuild/backend/mach_commands.py b/python/mozbuild/mozbuild/backend/mach_commands.py
index 40b0f33..af92bdd 100644
--- a/python/mozbuild/mozbuild/backend/mach_commands.py
+++ b/python/mozbuild/mozbuild/backend/mach_commands.py
@@ -150,8 +150,6 @@ def setup_vscode(command_context, interactive):
     else:
         new_settings = setup_clangd_rust_in_vscode(command_context)
 
-    relobjdir = mozpath.relpath(command_context.topobjdir, command_context.topsrcdir)
-
     # Add file associations.
     new_settings = {
         **new_settings,
@@ -165,8 +163,6 @@ def setup_vscode(command_context, interactive):
             "editor.defaultFormatter": "esbenp.prettier-vscode",
             "editor.formatOnSave": True,
         },
-        "files.exclude": {"obj-*": True, relobjdir: True},
-        "files.watcherExclude": {"obj-*": True, relobjdir: True},
     }
 
     import difflib
diff --git a/python/mozbuild/mozbuild/backend/make.py b/python/mozbuild/mozbuild/backend/make.py
index e93e490..90b37e6 100644
--- a/python/mozbuild/mozbuild/backend/make.py
+++ b/python/mozbuild/mozbuild/backend/make.py
@@ -106,7 +106,7 @@ class MakeBackend(CommonBackend):
                 (
                     """{stub}: {script}{inputs}{backend}{force}
 \t$(REPORT_BUILD)
-\t$(call py_action,file_generate {output},{locale}{script} """  # wrap for E501
+\t$(call py_action,file_generate,{locale}{script} """  # wrap for E501
                     """{method} {output} {dep_file} {stub}{inputs}{flags})
 \t@$(TOUCH) $@
 """
diff --git a/python/mozbuild/mozbuild/backend/recursivemake.py b/python/mozbuild/mozbuild/backend/recursivemake.py
index 65b64d1..2b0a6cb 100644
--- a/python/mozbuild/mozbuild/backend/recursivemake.py
+++ b/python/mozbuild/mozbuild/backend/recursivemake.py
@@ -1683,21 +1683,20 @@ class RecursiveMakeBackend(MakeBackend):
 
         top_level = mozpath.join(obj.install_target, "chrome.manifest")
         if obj.path != top_level:
-            path = mozpath.relpath(obj.path, obj.install_target)
             args = [
                 mozpath.join("$(DEPTH)", top_level),
-                make_quote(shell_quote("manifest %s" % path)),
+                make_quote(
+                    shell_quote(
+                        "manifest %s" % mozpath.relpath(obj.path, obj.install_target)
+                    )
+                ),
             ]
-            rule.add_commands(
-                ["$(call py_action,buildlist %s,%s)" % (path, " ".join(args))]
-            )
+            rule.add_commands(["$(call py_action,buildlist,%s)" % " ".join(args)])
         args = [
             mozpath.join("$(DEPTH)", obj.path),
             make_quote(shell_quote(str(obj.entry))),
         ]
-        rule.add_commands(
-            ["$(call py_action,buildlist %s,%s)" % (obj.entry.path, " ".join(args))]
-        )
+        rule.add_commands(["$(call py_action,buildlist,%s)" % " ".join(args)])
         fragment.dump(backend_file.fh, removal_guard=False)
 
         self._no_skip["misc"].add(obj.relsrcdir)
@@ -1786,7 +1785,7 @@ class RecursiveMakeBackend(MakeBackend):
             rule.add_commands(
                 [
                     "$(RM) $@",
-                    "$(call py_action,preprocessor $@,$(DEFINES) $(ACDEFINES) "
+                    "$(call py_action,preprocessor,$(DEFINES) $(ACDEFINES) "
                     "$< -o $@)",
                 ]
             )
@@ -1861,7 +1860,7 @@ class RecursiveMakeBackend(MakeBackend):
                     # static to preprocessed don't end up writing to a symlink,
                     # which would modify content in the source directory.
                     "$(RM) $@",
-                    "$(call py_action,preprocessor $@,$(DEFINES) $(ACDEFINES) "
+                    "$(call py_action,preprocessor,$(DEFINES) $(ACDEFINES) "
                     "$< -o $@)",
                 ]
             )
diff --git a/python/mozbuild/mozbuild/build_commands.py b/python/mozbuild/mozbuild/build_commands.py
index 3299ca7..bdf9e97 100644
--- a/python/mozbuild/mozbuild/build_commands.py
+++ b/python/mozbuild/mozbuild/build_commands.py
@@ -5,7 +5,6 @@
 import argparse
 import os
 import subprocess
-from urllib.parse import quote
 
 import mozpack.path as mozpath
 from mach.decorators import Command, CommandArgument
@@ -263,7 +262,7 @@ def configure(
 @Command(
     "resource-usage",
     category="post-build",
-    description="Show a profile of the build in the Firefox Profiler.",
+    description="Show information about system resource usage for a build.",
     virtualenv_name="build",
 )
 @CommandArgument(
@@ -282,7 +281,7 @@ def configure(
     default="firefox",
     help="Web browser to automatically open. See webbrowser Python module.",
 )
-@CommandArgument("--url", help="URL of a build profile to display")
+@CommandArgument("--url", help="URL of JSON document to display")
 def resource_usage(command_context, address=None, port=None, browser=None, url=None):
     import webbrowser
 
@@ -291,10 +290,10 @@ def resource_usage(command_context, address=None, port=None, browser=None, url=N
     server = BuildViewerServer(address, port)
 
     if url:
-        server.add_resource_json_url("profile", url)
+        server.add_resource_json_url("url", url)
     else:
-        profile = command_context._get_state_filename("profile_build_resources.json")
-        if not os.path.exists(profile):
+        last = command_context._get_state_filename("build_resources.json")
+        if not os.path.exists(last):
             print(
                 "Build resources not available. If you have performed a "
                 "build and receive this message, the psutil Python package "
@@ -302,20 +301,17 @@ def resource_usage(command_context, address=None, port=None, browser=None, url=N
             )
             return 1
 
-        server.add_resource_json_file("profile", profile)
-
-    profiler_url = "https://profiler.firefox.com/from-url/" + quote(
-        server.url + "resources/profile", ""
-    )
+        server.add_resource_json_file("last", last)
     try:
-        webbrowser.get(browser).open_new_tab(profiler_url)
+        webbrowser.get(browser).open_new_tab(server.url)
     except Exception:
         print("Cannot get browser specified, trying the default instead.")
         try:
-            browser = webbrowser.get().open_new_tab(profiler_url)
+            browser = webbrowser.get().open_new_tab(server.url)
         except Exception:
-            print("Please open %s in a browser." % profiler_url)
+            print("Please open %s in a browser." % server.url)
 
+    print("Hit CTRL+c to stop server.")
     server.run()
 
 
diff --git a/python/mozbuild/mozbuild/controller/building.py b/python/mozbuild/mozbuild/controller/building.py
index 651e1c0..aa753bf 100644
--- a/python/mozbuild/mozbuild/controller/building.py
+++ b/python/mozbuild/mozbuild/controller/building.py
@@ -9,11 +9,11 @@ import json
 import logging
 import os
 import re
+import shutil
 import subprocess
 import sys
 import time
 from collections import Counter, OrderedDict, namedtuple
-from itertools import dropwhile, islice, takewhile
 from textwrap import TextWrapper
 
 import six
@@ -34,7 +34,6 @@ from mozterm.widgets import Footer
 from ..backend import get_backend_class
 from ..base import MozbuildObject
 from ..compilation.warnings import WarningsCollector, WarningsDatabase
-from ..telemetry import get_cpu_brand
 from ..testing import install_test_files
 from ..util import FileAvoidWrite, mkdir, resolve_target_to_make
 from .clobber import Clobberer
@@ -180,64 +179,16 @@ class TierStatus(object):
             return d
 
 
-def record_cargo_timings(resource_monitor, timings_path):
-    cargo_start = 0
-    try:
-        with open(timings_path) as fh:
-            # Extrace the UNIT_DATA list from the cargo timing HTML file.
-            unit_data = dropwhile(lambda l: l.rstrip() != "const UNIT_DATA = [", fh)
-            unit_data = islice(unit_data, 1, None)
-            lines = takewhile(lambda l: l.rstrip() != "];", unit_data)
-            entries = json.loads("[" + "".join(lines) + "]")
-            # Normalize the entries so that any change in data format would
-            # trigger the exception handler that skips this (we don't want the
-            # build to fail in that case)
-            data = [
-                (
-                    "{} v{}{}".format(
-                        entry["name"], entry["version"], entry.get("target", "")
-                    ),
-                    entry["start"] or 0,
-                    entry["duration"] or 0,
-                )
-                for entry in entries
-            ]
-        starts = [
-            start
-            for marker, start in resource_monitor._active_markers.items()
-            if marker.startswith("Rust:")
-        ]
-        # The build system is not supposed to be running more than one cargo
-        # at the same time, which thankfully makes it easier to find the start
-        # of the one we got the timings for.
-        if len(starts) != 1:
-            return
-        cargo_start = starts[0]
-    except Exception:
-        return
-
-    if not cargo_start:
-        return
-
-    for name, start, duration in data:
-        resource_monitor.record_marker(
-            "Rust", cargo_start + start, cargo_start + start + duration, name
-        )
-
-
 class BuildMonitor(MozbuildObject):
     """Monitors the output of the build."""
 
-    def init(self, warnings_path, terminal):
+    def init(self, warnings_path):
         """Create a new monitor.
 
         warnings_path is a path of a warnings database to use.
         """
         self._warnings_path = warnings_path
-        self.resources = SystemResourceMonitor(
-            poll_interval=0.1,
-            metadata={"CPUName": get_cpu_brand()},
-        )
+        self.resources = SystemResourceMonitor(poll_interval=1.0)
         self._resources_started = False
 
         self.tiers = TierStatus(self.resources)
@@ -253,8 +204,6 @@ class BuildMonitor(MozbuildObject):
         # warnings.
         self.instance_warnings = WarningsDatabase()
 
-        self._terminal = terminal
-
         def on_warning(warning):
             # Skip `errors`
             if warning["type"] == "error":
@@ -270,6 +219,7 @@ class BuildMonitor(MozbuildObject):
             self.instance_warnings.insert(warning.copy())
 
         self._warnings_collector = WarningsCollector(on_warning, objdir=self.topobjdir)
+        self._build_tasks = []
 
         self.build_objects = []
         self.build_dirs = set()
@@ -304,12 +254,8 @@ class BuildMonitor(MozbuildObject):
         """
         message = None
 
-        # If the previous line was colored (eg. for a compiler warning), our
-        # line will start with the ansi reset sequence. Strip it to ensure it
-        # does not interfere with our parsing of the line.
-        plain_line = self._terminal.strip(line) if self._terminal else line.strip()
-        if plain_line.startswith("BUILDSTATUS"):
-            args = plain_line.split()[1:]
+        if line.startswith("BUILDSTATUS"):
+            args = line.split()[1:]
 
             action = args.pop(0)
             update_needed = True
@@ -325,13 +271,6 @@ class BuildMonitor(MozbuildObject):
                 self.tiers.finish_tier(tier)
             elif action == "OBJECT_FILE":
                 self.build_objects.append(args[0])
-                self.resources.begin_marker("Object", args[0])
-                update_needed = False
-            elif action.startswith("START_"):
-                self.resources.begin_marker(action[len("START_") :], " ".join(args))
-                update_needed = False
-            elif action.startswith("END_"):
-                self.resources.end_marker(action[len("END_") :], " ".join(args))
                 update_needed = False
             elif action == "BUILD_VERBOSE":
                 build_dir = args[0]
@@ -343,10 +282,15 @@ class BuildMonitor(MozbuildObject):
                 raise Exception("Unknown build status: %s" % action)
 
             return BuildOutputResult(None, update_needed, message)
-
-        elif plain_line.startswith("Timing report saved to "):
-            cargo_timings = plain_line[len("Timing report saved to ") :]
-            record_cargo_timings(self.resources, cargo_timings)
+        elif line.startswith("BUILDTASK"):
+            _, data = line.split(maxsplit=1)
+            # Check that we can parse the JSON. Skip this line if we can't;
+            # we'll be missing data, but that's not a huge deal.
+            try:
+                json.loads(data)
+                self._build_tasks.append(data)
+            except json.decoder.JSONDecodeError:
+                pass
             return BuildOutputResult(None, False, None)
 
         warning = None
@@ -375,6 +319,18 @@ class BuildMonitor(MozbuildObject):
         self.warnings_database.prune()
         self.warnings_database.save_to_file(self._warnings_path)
 
+        if "MOZ_AUTOMATION" not in os.environ:
+            build_tasks_path = self._get_state_filename("build_tasks.json")
+            with io.open(build_tasks_path, "w", encoding="utf-8", newline="\n") as fh:
+                fh.write("[")
+                first = True
+                for task in self._build_tasks:
+                    # We've already verified all of these are valid JSON, so we
+                    # can write the data out to the file directly.
+                    fh.write("%s\n  %s" % ("," if not first else "", task))
+                    first = False
+                fh.write("\n]\n")
+
         # Record usage.
         if not record_usage:
             return
@@ -389,18 +345,28 @@ class BuildMonitor(MozbuildObject):
             # the upload path, alongside, for convenience, a copy of the HTML
             # viewer.
             if "MOZ_AUTOMATION" in os.environ and "UPLOAD_PATH" in os.environ:
-                build_resources_profile_path = mozpath.join(
-                    os.environ["UPLOAD_PATH"], "profile_build_resources.json"
+                build_resources_path = os.path.join(
+                    os.environ["UPLOAD_PATH"], "build_resources.json"
                 )
-            else:
-                build_resources_profile_path = self._get_state_filename(
-                    "profile_build_resources.json"
+                shutil.copy(
+                    os.path.join(
+                        self.topsrcdir,
+                        "python",
+                        "mozbuild",
+                        "mozbuild",
+                        "resources",
+                        "html-build-viewer",
+                        "build_resources.html",
+                    ),
+                    os.environ["UPLOAD_PATH"],
                 )
+            else:
+                build_resources_path = self._get_state_filename("build_resources.json")
             with io.open(
-                build_resources_profile_path, "w", encoding="utf-8", newline="\n"
+                build_resources_path, "w", encoding="utf-8", newline="\n"
             ) as fh:
                 to_write = six.ensure_text(
-                    json.dumps(self.resources.as_profile(), separators=(",", ":"))
+                    json.dumps(self.resources.as_dict(), indent=2)
                 )
                 fh.write(to_write)
         except Exception as e:
@@ -846,7 +812,7 @@ class StaticAnalysisOutputManager(OutputManager):
         assert output_format in ("text", "json"), "Invalid output format {}".format(
             output_format
         )
-        path = mozpath.realpath(path)
+        path = os.path.realpath(path)
 
         if output_format == "json":
             self.monitor._warnings_database.save_to_file(path)
@@ -1176,7 +1142,7 @@ class BuildDriver(MozbuildObject):
         self.mach_context = mach_context
         warnings_path = self._get_state_filename("warnings.json")
         monitor = self._spawn(BuildMonitor)
-        monitor.init(warnings_path, self.log_manager.terminal)
+        monitor.init(warnings_path)
         footer = BuildProgressFooter(self.log_manager.terminal, monitor)
 
         # Disable indexing in objdir because it is not necessary and can slow
@@ -1263,21 +1229,6 @@ class BuildDriver(MozbuildObject):
             def get_substs_flag(name):
                 return bool(substs.get(name, None))
 
-            host = substs.get("host")
-            monitor.resources.metadata["oscpu"] = host
-            target = substs.get("target")
-            if host != target:
-                monitor.resources.metadata["abi"] = target
-
-            product_name = substs.get("MOZ_BUILD_APP")
-            app_displayname = substs.get("MOZ_APP_DISPLAYNAME")
-            if app_displayname:
-                product_name = app_displayname
-                app_version = substs.get("MOZ_APP_VERSION")
-                if app_version:
-                    product_name += " " + app_version
-            monitor.resources.metadata["product"] = product_name
-
             mozbuild_metrics.artifact.set(get_substs_flag("MOZ_ARTIFACT_BUILDS"))
             mozbuild_metrics.debug.set(get_substs_flag("MOZ_DEBUG"))
             mozbuild_metrics.opt.set(get_substs_flag("MOZ_OPTIMIZE"))
@@ -1330,7 +1281,7 @@ class BuildDriver(MozbuildObject):
                     path_arg = self._wrap_path_argument(target)
 
                     if directory is not None:
-                        make_dir = mozpath.join(self.topobjdir, directory)
+                        make_dir = os.path.join(self.topobjdir, directory)
                         make_target = target
                     else:
                         make_dir, make_target = resolve_target_to_make(
@@ -1457,11 +1408,11 @@ class BuildDriver(MozbuildObject):
             # until we suppress them for real.
             # TODO remove entries/feature once we stop generating warnings
             # in these directories.
-            pathToThirdparty = mozpath.join(
+            pathToThirdparty = os.path.join(
                 self.topsrcdir, "tools", "rewriting", "ThirdPartyPaths.txt"
             )
 
-            pathToGenerated = mozpath.join(
+            pathToGenerated = os.path.join(
                 self.topsrcdir, "tools", "rewriting", "Generated.txt"
             )
 
@@ -1501,7 +1452,7 @@ class BuildDriver(MozbuildObject):
                         continue
 
                     if warning["flag"] in suppressed:
-                        suppressed_by_dir[mozpath.dirname(path)] += 1
+                        suppressed_by_dir[os.path.dirname(path)] += 1
                         continue
 
                 warnings.append(warning)
@@ -1586,7 +1537,7 @@ class BuildDriver(MozbuildObject):
             # if excessive:
             #    print(EXCESSIVE_SWAP_MESSAGE)
 
-            print("To view a profile of the build, run |mach " "resource-usage|.")
+            print("To view resource usage of the build, run |mach " "resource-usage|.")
 
         long_build = monitor.elapsed > 1200
 
@@ -1663,7 +1614,7 @@ class BuildDriver(MozbuildObject):
         )
         build_site.ensure()
 
-        command = [build_site.python_path, mozpath.join(self.topsrcdir, "configure.py")]
+        command = [build_site.python_path, os.path.join(self.topsrcdir, "configure.py")]
         if options:
             command.extend(options)
 
@@ -1701,7 +1652,7 @@ class BuildDriver(MozbuildObject):
         if self.is_clobber_needed():
             print(
                 INSTALL_TESTS_CLOBBER.format(
-                    clobber_file=mozpath.join(self.topobjdir, "CLOBBER")
+                    clobber_file=os.path.join(self.topobjdir, "CLOBBER")
                 )
             )
             sys.exit(1)
@@ -1754,7 +1705,7 @@ class BuildDriver(MozbuildObject):
         return True
 
     def _write_mozconfig_json(self):
-        mozconfig_json = mozpath.join(self.topobjdir, ".mozconfig.json")
+        mozconfig_json = os.path.join(self.topobjdir, ".mozconfig.json")
         with FileAvoidWrite(mozconfig_json) as fh:
             to_write = six.ensure_text(
                 json.dumps(
@@ -1819,16 +1770,16 @@ class BuildDriver(MozbuildObject):
             if line.startswith("export ") or "UPLOAD_EXTRA_FILES" in line
         ]
 
-        mozconfig_client_mk = mozpath.join(self.topobjdir, ".mozconfig-client-mk")
+        mozconfig_client_mk = os.path.join(self.topobjdir, ".mozconfig-client-mk")
         with FileAvoidWrite(mozconfig_client_mk) as fh:
             fh.write("\n".join(mozconfig_make_lines))
 
-        mozconfig_mk = mozpath.join(self.topobjdir, ".mozconfig.mk")
+        mozconfig_mk = os.path.join(self.topobjdir, ".mozconfig.mk")
         with FileAvoidWrite(mozconfig_mk) as fh:
             fh.write("\n".join(mozconfig_filtered_lines))
 
         # Copy the original mozconfig to the objdir.
-        mozconfig_objdir = mozpath.join(self.topobjdir, ".mozconfig")
+        mozconfig_objdir = os.path.join(self.topobjdir, ".mozconfig")
         if mozconfig["path"]:
             with open(mozconfig["path"], "r") as ifh:
                 with FileAvoidWrite(mozconfig_objdir) as ofh:
diff --git a/python/mozbuild/mozbuild/controller/clobber.py b/python/mozbuild/mozbuild/controller/clobber.py
index a8612a6..e1be2d4 100644
--- a/python/mozbuild/mozbuild/controller/clobber.py
+++ b/python/mozbuild/mozbuild/controller/clobber.py
@@ -11,7 +11,6 @@ import sys
 from textwrap import TextWrapper
 
 from mozfile.mozfile import remove as mozfileremove
-from mozpack import path as mozpath
 
 CLOBBER_MESSAGE = "".join(
     [
@@ -52,10 +51,10 @@ class Clobberer(object):
         assert os.path.isabs(topsrcdir)
         assert os.path.isabs(topobjdir)
 
-        self.topsrcdir = mozpath.normpath(topsrcdir)
-        self.topobjdir = mozpath.normpath(topobjdir)
-        self.src_clobber = mozpath.join(topsrcdir, "CLOBBER")
-        self.obj_clobber = mozpath.join(topobjdir, "CLOBBER")
+        self.topsrcdir = os.path.normpath(topsrcdir)
+        self.topobjdir = os.path.normpath(topobjdir)
+        self.src_clobber = os.path.join(topsrcdir, "CLOBBER")
+        self.obj_clobber = os.path.join(topobjdir, "CLOBBER")
         if substs:
             self.substs = substs
         else:
@@ -63,7 +62,7 @@ class Clobberer(object):
 
         # Try looking for mozilla/CLOBBER, for comm-central
         if not os.path.isfile(self.src_clobber):
-            comm_clobber = mozpath.join(topsrcdir, "mozilla", "CLOBBER")
+            comm_clobber = os.path.join(topsrcdir, "mozilla", "CLOBBER")
             if os.path.isfile(comm_clobber):
                 self.src_clobber = comm_clobber
 
@@ -113,7 +112,7 @@ class Clobberer(object):
         try:
             for p in os.listdir(root):
                 if p not in exclude:
-                    paths.append(mozpath.join(root, p))
+                    paths.append(os.path.join(root, p))
         except OSError as e:
             if e.errno != errno.ENOENT:
                 raise
@@ -124,7 +123,7 @@ class Clobberer(object):
         """Deletes the given subdirectories in an optimal way."""
         procs = []
         for p in sorted(paths_to_delete):
-            path = mozpath.join(root, p)
+            path = os.path.join(root, p)
             if (
                 sys.platform.startswith("win")
                 and self.have_winrm()
@@ -170,7 +169,7 @@ class Clobberer(object):
         # Now handle cargo's build artifacts and skip removing the incremental
         # compilation cache.
         for target in rust_targets:
-            cargo_path = mozpath.join(self.topobjdir, target, rust_build_kind)
+            cargo_path = os.path.join(self.topobjdir, target, rust_build_kind)
             paths = self.collect_subdirs(
                 cargo_path,
                 {
@@ -194,7 +193,7 @@ class Clobberer(object):
             error.
         """
         assert cwd
-        cwd = mozpath.normpath(cwd)
+        cwd = os.path.normpath(cwd)
 
         if not self.clobber_needed():
             print("Clobber not needed.", file=fh)
diff --git a/python/mozbuild/mozbuild/frontend/context.py b/python/mozbuild/mozbuild/frontend/context.py
index 42ec71e..fcc7400 100644
--- a/python/mozbuild/mozbuild/frontend/context.py
+++ b/python/mozbuild/mozbuild/frontend/context.py
@@ -2483,14 +2483,6 @@ VARIABLES = {
         See ``DEFINES`` for specifics.
         """,
     ),
-    "WASM_LIBS": (
-        List,
-        list,
-        """Wasm system link libraries.
-
-        This variable contains a list of wasm system libaries to link against.
-        """,
-    ),
     "CMFLAGS": (
         List,
         list,
diff --git a/python/mozbuild/mozbuild/frontend/emitter.py b/python/mozbuild/mozbuild/frontend/emitter.py
index fea39fe..166fe6b 100644
--- a/python/mozbuild/mozbuild/frontend/emitter.py
+++ b/python/mozbuild/mozbuild/frontend/emitter.py
@@ -1235,7 +1235,6 @@ class TreeMetadataEmitter(LoggingMixin):
             "RCINCLUDE",
             "WIN32_EXE_LDFLAGS",
             "USE_EXTENSION_MANIFEST",
-            "WASM_LIBS",
         ]
         for v in varlist:
             if v in context and context[v]:
diff --git a/python/mozbuild/mozbuild/html_build_viewer.py b/python/mozbuild/mozbuild/html_build_viewer.py
index 7a99ff7..0582e6f 100644
--- a/python/mozbuild/mozbuild/html_build_viewer.py
+++ b/python/mozbuild/mozbuild/html_build_viewer.py
@@ -34,13 +34,9 @@ class HTTPHandler(http.server.BaseHTTPRequestHandler):
 
             self.send_response(200)
             self.send_header("Content-Type", "application/json; charset=utf-8")
-            self.send_header(
-                "Access-Control-Allow-Origin", "https://profiler.firefox.com"
-            )
             self.end_headers()
 
             self.wfile.write(s.json_files[key])
-            self.server.wrapper.do_shutdown = True
             return
 
         if p == "/":
diff --git a/python/mozbuild/mozbuild/mach_commands.py b/python/mozbuild/mozbuild/mach_commands.py
index e54b770..6f83496 100644
--- a/python/mozbuild/mozbuild/mach_commands.py
+++ b/python/mozbuild/mozbuild/mach_commands.py
@@ -28,7 +28,6 @@ from mach.decorators import (
     SettingsProvider,
     SubCommand,
 )
-from mozfile import load_source
 
 import mozbuild.settings  # noqa need @SettingsProvider hook to execute
 from mozbuild.base import (
@@ -1116,10 +1115,11 @@ def android_gtest(
 
     # run gtest via remotegtests.py
     exit_code = 0
+    import imp
 
     path = os.path.join("testing", "gtest", "remotegtests.py")
-    load_source("remotegtests", path)
-
+    with open(path, "r") as fh:
+        imp.load_module("remotegtests", fh, path, (".py", "r", imp.PY_SOURCE))
     import remotegtests
 
     tester = remotegtests.RemoteGTests()
@@ -2405,17 +2405,14 @@ def repackage_deb_l10n(
 @SubCommand("repackage", "dmg", description="Repackage a tar file into a .dmg for OSX")
 @CommandArgument("--input", "-i", type=str, required=True, help="Input filename")
 @CommandArgument("--output", "-o", type=str, required=True, help="Output filename")
-@CommandArgument(
-    "--attribution_sentinel", type=str, required=False, help="DMGs with attribution."
-)
-def repackage_dmg(command_context, input, output, attribution_sentinel):
+def repackage_dmg(command_context, input, output):
     if not os.path.exists(input):
         print("Input file does not exist: %s" % input)
         return 1
 
     from mozbuild.repackaging.dmg import repackage_dmg
 
-    repackage_dmg(input, output, attribution_sentinel)
+    repackage_dmg(input, output)
 
 
 @SubCommand("repackage", "pkg", description="Repackage a tar file into a .pkg for OSX")
diff --git a/python/mozbuild/mozbuild/nodeutil.py b/python/mozbuild/mozbuild/nodeutil.py
index 42f2627..8ec724a 100644
--- a/python/mozbuild/mozbuild/nodeutil.py
+++ b/python/mozbuild/mozbuild/nodeutil.py
@@ -5,14 +5,14 @@
 import os
 import platform
 import subprocess
+from distutils.version import StrictVersion
 
 from mozboot.util import get_tools_dir
 from mozfile import which
-from packaging.version import Version
 from six import PY3
 
-NODE_MIN_VERSION = Version("12.22.12")
-NPM_MIN_VERSION = Version("6.14.16")
+NODE_MIN_VERSION = StrictVersion("12.22.12")
+NPM_MIN_VERSION = StrictVersion("6.14.16")
 
 
 def find_node_paths():
@@ -68,7 +68,7 @@ def check_executable_version(exe, wrap_call_with_node=False):
             .lstrip("v")
             .rstrip()
         )
-    return Version(out)
+    return StrictVersion(out)
 
 
 def find_node_executable(
@@ -87,7 +87,7 @@ def find_node_executable(
             return None, None
 
         if version >= min_version:
-            return nodejs_exe, version.release
+            return nodejs_exe, version.version
 
         return None, None
 
@@ -123,4 +123,4 @@ def find_executable(name, min_version, use_node_for_version_check=False):
     if version < min_version:
         return None, None
 
-    return exe, version.release
+    return exe, version.version
diff --git a/python/mozbuild/mozbuild/repackaging/deb.py b/python/mozbuild/mozbuild/repackaging/deb.py
index 7ba034c..532e5e6 100644
--- a/python/mozbuild/mozbuild/repackaging/deb.py
+++ b/python/mozbuild/mozbuild/repackaging/deb.py
@@ -74,10 +74,12 @@ def repackage_deb(
     source_dir = os.path.join(tmpdir, "source")
     try:
         mozfile.extract_tarball(infile, source_dir)
-        application_ini_data = _load_application_ini_data(infile, version, build_number)
+        application_ini_data = _extract_application_ini_data(infile)
         build_variables = _get_build_variables(
             application_ini_data,
             arch,
+            version,
+            build_number,
             depends="${shlibs:Depends},",
         )
 
@@ -128,14 +130,14 @@ def repackage_deb_l10n(
     try:
         langpack_metadata = _extract_langpack_metadata(input_xpi_file)
         langpack_dir = mozpath.join(source_dir, "firefox", "distribution", "extensions")
-        application_ini_data = _load_application_ini_data(
-            input_tar_file, version, build_number
-        )
+        application_ini_data = _extract_application_ini_data(input_tar_file)
         langpack_id = langpack_metadata["langpack_id"]
         build_variables = _get_build_variables(
             application_ini_data,
             arch,
-            depends=f"{application_ini_data['remoting_name']} (= {application_ini_data['deb_pkg_version']})",
+            version,
+            build_number,
+            depends=application_ini_data["remoting_name"],
             # Debian package names are only lowercase
             package_name_suffix=f"-l10n-{langpack_id.lower()}",
             description_suffix=f" - {langpack_metadata['description']}",
@@ -182,43 +184,7 @@ def _extract_application_ini_data(input_tar_file):
 
             tar.extract(application_ini_files[0], path=d)
 
-        application_ini_data = _extract_application_ini_data_from_directory(d)
-
-        return application_ini_data
-
-
-def _load_application_ini_data(infile, version, build_number):
-    extracted_application_ini_data = _extract_application_ini_data(infile)
-    parsed_application_ini_data = _parse_application_ini_data(
-        extracted_application_ini_data, version, build_number
-    )
-    return parsed_application_ini_data
-
-
-def _parse_application_ini_data(application_ini_data, version, build_number):
-    application_ini_data["timestamp"] = datetime.datetime.strptime(
-        application_ini_data["build_id"], "%Y%m%d%H%M%S"
-    )
-
-    application_ini_data["remoting_name"] = application_ini_data[
-        "remoting_name"
-    ].lower()
-
-    application_ini_data["deb_pkg_version"] = _get_deb_pkg_version(
-        version, application_ini_data["build_id"], build_number
-    )
-
-    return application_ini_data
-
-
-def _get_deb_pkg_version(version, build_id, build_number):
-    gecko_version = GeckoVersion.parse(version)
-    deb_pkg_version = (
-        f"{gecko_version}~{build_id}"
-        if gecko_version.is_nightly
-        else f"{gecko_version}~build{build_number}"
-    )
-    return deb_pkg_version
+        return _extract_application_ini_data_from_directory(d)
 
 
 def _extract_application_ini_data_from_directory(application_directory):
@@ -238,6 +204,7 @@ def _extract_application_ini_data_from_directory(application_directory):
         "remoting_name": next(values),
         "build_id": next(values),
     }
+    data["timestamp"] = datetime.datetime.strptime(data["build_id"], "%Y%m%d%H%M%S")
 
     return data
 
@@ -245,16 +212,27 @@ def _extract_application_ini_data_from_directory(application_directory):
 def _get_build_variables(
     application_ini_data,
     arch,
+    version_string,
+    build_number,
     depends,
     package_name_suffix="",
     description_suffix="",
 ):
+    version = GeckoVersion.parse(version_string)
+    # Nightlies don't have build numbers
+    deb_pkg_version = (
+        f"{version}~{application_ini_data['build_id']}"
+        if version.is_nightly
+        else f"{version}~build{build_number}"
+    )
+    remoting_name = application_ini_data["remoting_name"].lower()
+
     return {
         "DEB_DESCRIPTION": f"{application_ini_data['vendor']} {application_ini_data['display_name']}"
         f"{description_suffix}",
-        "DEB_PKG_INSTALL_PATH": f"usr/lib/{application_ini_data['remoting_name']}",
-        "DEB_PKG_NAME": f"{application_ini_data['remoting_name']}{package_name_suffix}",
-        "DEB_PKG_VERSION": application_ini_data["deb_pkg_version"],
+        "DEB_PKG_INSTALL_PATH": f"usr/lib/{remoting_name}",
+        "DEB_PKG_NAME": f"{remoting_name}{package_name_suffix}",
+        "DEB_PKG_VERSION": deb_pkg_version,
         "DEB_CHANGELOG_DATE": format_datetime(application_ini_data["timestamp"]),
         "DEB_ARCH_NAME": _DEB_ARCH[arch],
         "DEB_DEPENDS": depends,
@@ -389,14 +367,23 @@ def _create_fluent_localizations(
         )
         if locale == "en-US":
             en_US_desktop_entry_fluent_filename = os.path.join(
-                "browser", "locales", "en-US", "browser", desktop_entry_fluent_filename
+                "browser/locales/en-US/browser", desktop_entry_fluent_filename
             )
             shutil.copyfile(
                 en_US_desktop_entry_fluent_filename,
                 localized_desktop_entry_filename,
             )
         else:
-            non_en_US_fluent_resource_file_url = f"{l10n_central_url}/{locale}/raw-file/{linux_l10n_changesets[locale]['revision']}/browser/browser/{desktop_entry_fluent_filename}"
+            non_en_US_desktop_entry_fluent_filename = os.path.join(
+                "browser/browser", desktop_entry_fluent_filename
+            )
+            non_en_US_fluent_resource_file_url = os.path.join(
+                l10n_central_url,
+                locale,
+                "raw-file",
+                linux_l10n_changesets[locale]["revision"],
+                non_en_US_desktop_entry_fluent_filename,
+            )
             response = requests.get(non_en_US_fluent_resource_file_url)
             response = retry(
                 requests.get,
diff --git a/python/mozbuild/mozbuild/repackaging/dmg.py b/python/mozbuild/mozbuild/repackaging/dmg.py
index d83ab0c..5054fde 100644
--- a/python/mozbuild/mozbuild/repackaging/dmg.py
+++ b/python/mozbuild/mozbuild/repackaging/dmg.py
@@ -12,7 +12,7 @@ from mozbuild.bootstrap import bootstrap_toolchain
 from mozbuild.repackaging.application_ini import get_application_ini_value
 
 
-def repackage_dmg(infile, output, attribution_sentinel=None):
+def repackage_dmg(infile, output):
     if not tarfile.is_tarfile(infile):
         raise Exception("Input file %s is not a valid tarfile." % infile)
 
@@ -52,5 +52,4 @@ def repackage_dmg(infile, output, attribution_sentinel=None):
             dmg_tool=Path(dmg_tool),
             hfs_tool=Path(hfs_tool),
             mkfshfs_tool=Path(mkfshfs_tool),
-            attribution_sentinel=attribution_sentinel,
         )
diff --git a/python/mozbuild/mozbuild/test/backend/data/test-manifest-shared-support/child/browser.ini b/python/mozbuild/mozbuild/test/backend/data/test-manifest-shared-support/child/browser.ini
new file mode 100644
index 0000000..4f1335d
--- /dev/null
+++ b/python/mozbuild/mozbuild/test/backend/data/test-manifest-shared-support/child/browser.ini
@@ -0,0 +1,6 @@
+[DEFAULT]
+support-files =
+  another-file.sjs
+  data/**
+
+[test_sub.js]
\ No newline at end of file
diff --git a/python/mozbuild/mozbuild/test/backend/data/test-manifest-shared-support/child/browser.toml b/python/mozbuild/mozbuild/test/backend/data/test-manifest-shared-support/child/browser.toml
deleted file mode 100644
index 98d0242..0000000
--- a/python/mozbuild/mozbuild/test/backend/data/test-manifest-shared-support/child/browser.toml
+++ /dev/null
@@ -1,7 +0,0 @@
-[DEFAULT]
-support-files = [
-  "another-file.sjs",
-  "data/**"
-]
-
-["test_sub.js"]
diff --git a/python/mozbuild/mozbuild/test/backend/data/test-manifest-shared-support/moz.build b/python/mozbuild/mozbuild/test/backend/data/test-manifest-shared-support/moz.build
index 6d6aa4c..9df54db 100644
--- a/python/mozbuild/mozbuild/test/backend/data/test-manifest-shared-support/moz.build
+++ b/python/mozbuild/mozbuild/test/backend/data/test-manifest-shared-support/moz.build
@@ -2,4 +2,4 @@
 # http://creativecommons.org/publicdomain/zero/1.0/
 
 MOCHITEST_MANIFESTS += ["mochitest.ini"]
-BROWSER_CHROME_MANIFESTS += ["child/browser.toml"]
+BROWSER_CHROME_MANIFESTS += ["child/browser.ini"]
diff --git a/python/mozbuild/mozbuild/test/backend/test_recursivemake.py b/python/mozbuild/mozbuild/test/backend/test_recursivemake.py
index e5e313b..b7b5cd3 100644
--- a/python/mozbuild/mozbuild/test/backend/test_recursivemake.py
+++ b/python/mozbuild/mozbuild/test/backend/test_recursivemake.py
@@ -420,7 +420,7 @@ class TestRecursiveMakeBackend(BackendTester):
             "EXTRA_MDDEPEND_FILES += $(MDDEPDIR)/bar.c.pp",
             "$(MDDEPDIR)/bar.c.stub: %s/generate-bar.py" % env.topsrcdir,
             "$(REPORT_BUILD)",
-            "$(call py_action,file_generate bar.c,%s/generate-bar.py baz bar.c $(MDDEPDIR)/bar.c.pp $(MDDEPDIR)/bar.c.stub)"  # noqa
+            "$(call py_action,file_generate,%s/generate-bar.py baz bar.c $(MDDEPDIR)/bar.c.pp $(MDDEPDIR)/bar.c.stub)"  # noqa
             % env.topsrcdir,
             "@$(TOUCH) $@",
             "",
@@ -430,7 +430,7 @@ class TestRecursiveMakeBackend(BackendTester):
             "$(MDDEPDIR)/foo.h.stub: %s/generate-foo.py $(srcdir)/foo-data"
             % (env.topsrcdir),
             "$(REPORT_BUILD)",
-            "$(call py_action,file_generate foo.h,%s/generate-foo.py main foo.h $(MDDEPDIR)/foo.h.pp $(MDDEPDIR)/foo.h.stub $(srcdir)/foo-data)"  # noqa
+            "$(call py_action,file_generate,%s/generate-foo.py main foo.h $(MDDEPDIR)/foo.h.pp $(MDDEPDIR)/foo.h.stub $(srcdir)/foo-data)"  # noqa
             % (env.topsrcdir),
             "@$(TOUCH) $@",
             "",
@@ -453,7 +453,7 @@ class TestRecursiveMakeBackend(BackendTester):
             "EXTRA_MDDEPEND_FILES += $(MDDEPDIR)/bar.c.pp",
             "$(MDDEPDIR)/bar.c.stub: %s/generate-bar.py FORCE" % env.topsrcdir,
             "$(REPORT_BUILD)",
-            "$(call py_action,file_generate bar.c,%s/generate-bar.py baz bar.c $(MDDEPDIR)/bar.c.pp $(MDDEPDIR)/bar.c.stub)"  # noqa
+            "$(call py_action,file_generate,%s/generate-bar.py baz bar.c $(MDDEPDIR)/bar.c.pp $(MDDEPDIR)/bar.c.stub)"  # noqa
             % env.topsrcdir,
             "@$(TOUCH) $@",
             "",
@@ -463,7 +463,7 @@ class TestRecursiveMakeBackend(BackendTester):
             "$(MDDEPDIR)/foo.c.stub: %s/generate-foo.py $(srcdir)/foo-data"
             % (env.topsrcdir),
             "$(REPORT_BUILD)",
-            "$(call py_action,file_generate foo.c,%s/generate-foo.py main foo.c $(MDDEPDIR)/foo.c.pp $(MDDEPDIR)/foo.c.stub $(srcdir)/foo-data)"  # noqa
+            "$(call py_action,file_generate,%s/generate-foo.py main foo.c $(MDDEPDIR)/foo.c.pp $(MDDEPDIR)/foo.c.stub $(srcdir)/foo-data)"  # noqa
             % (env.topsrcdir),
             "@$(TOUCH) $@",
             "",
@@ -487,7 +487,7 @@ class TestRecursiveMakeBackend(BackendTester):
             "$(MDDEPDIR)/foo.xyz.stub: %s/generate-foo.py $(call MERGE_FILE,localized-input) $(srcdir)/non-localized-input $(if $(IS_LANGUAGE_REPACK),FORCE)"  # noqa
             % env.topsrcdir,
             "$(REPORT_BUILD)",
-            "$(call py_action,file_generate foo.xyz,--locale=$(AB_CD) %s/generate-foo.py main foo.xyz $(MDDEPDIR)/foo.xyz.pp $(MDDEPDIR)/foo.xyz.stub $(call MERGE_FILE,localized-input) $(srcdir)/non-localized-input)"  # noqa
+            "$(call py_action,file_generate,--locale=$(AB_CD) %s/generate-foo.py main foo.xyz $(MDDEPDIR)/foo.xyz.pp $(MDDEPDIR)/foo.xyz.stub $(call MERGE_FILE,localized-input) $(srcdir)/non-localized-input)"  # noqa
             % env.topsrcdir,
             "@$(TOUCH) $@",
             "",
@@ -515,7 +515,7 @@ class TestRecursiveMakeBackend(BackendTester):
             "$(MDDEPDIR)/foo.xyz.stub: %s/generate-foo.py $(call MERGE_FILE,localized-input) $(srcdir)/non-localized-input $(if $(IS_LANGUAGE_REPACK),FORCE)"  # noqa
             % env.topsrcdir,
             "$(REPORT_BUILD)",
-            "$(call py_action,file_generate foo.xyz,--locale=$(AB_CD) %s/generate-foo.py main foo.xyz $(MDDEPDIR)/foo.xyz.pp $(MDDEPDIR)/foo.xyz.stub $(call MERGE_FILE,localized-input) $(srcdir)/non-localized-input)"  # noqa
+            "$(call py_action,file_generate,--locale=$(AB_CD) %s/generate-foo.py main foo.xyz $(MDDEPDIR)/foo.xyz.pp $(MDDEPDIR)/foo.xyz.stub $(call MERGE_FILE,localized-input) $(srcdir)/non-localized-input)"  # noqa
             % env.topsrcdir,
             "@$(TOUCH) $@",
             "",
@@ -525,7 +525,7 @@ class TestRecursiveMakeBackend(BackendTester):
             "$(MDDEPDIR)/abc.xyz.stub: %s/generate-foo.py $(call MERGE_FILE,localized-input) $(srcdir)/non-localized-input FORCE"  # noqa
             % env.topsrcdir,
             "$(REPORT_BUILD)",
-            "$(call py_action,file_generate abc.xyz,--locale=$(AB_CD) %s/generate-foo.py main abc.xyz $(MDDEPDIR)/abc.xyz.pp $(MDDEPDIR)/abc.xyz.stub $(call MERGE_FILE,localized-input) $(srcdir)/non-localized-input)"  # noqa
+            "$(call py_action,file_generate,--locale=$(AB_CD) %s/generate-foo.py main abc.xyz $(MDDEPDIR)/abc.xyz.pp $(MDDEPDIR)/abc.xyz.stub $(call MERGE_FILE,localized-input) $(srcdir)/non-localized-input)"  # noqa
             % env.topsrcdir,
             "@$(TOUCH) $@",
             "",
@@ -550,7 +550,7 @@ class TestRecursiveMakeBackend(BackendTester):
             "$(MDDEPDIR)/foo$(AB_CD).xyz.stub: %s/generate-foo.py $(call MERGE_FILE,localized-input) $(srcdir)/non-localized-input $(if $(IS_LANGUAGE_REPACK),FORCE)"  # noqa
             % env.topsrcdir,
             "$(REPORT_BUILD)",
-            "$(call py_action,file_generate foo$(AB_CD).xyz,--locale=$(AB_CD) %s/generate-foo.py main foo$(AB_CD).xyz $(MDDEPDIR)/foo$(AB_CD).xyz.pp $(MDDEPDIR)/foo$(AB_CD).xyz.stub $(call MERGE_FILE,localized-input) $(srcdir)/non-localized-input)"  # noqa
+            "$(call py_action,file_generate,--locale=$(AB_CD) %s/generate-foo.py main foo$(AB_CD).xyz $(MDDEPDIR)/foo$(AB_CD).xyz.pp $(MDDEPDIR)/foo$(AB_CD).xyz.stub $(call MERGE_FILE,localized-input) $(srcdir)/non-localized-input)"  # noqa
             % env.topsrcdir,
             "@$(TOUCH) $@",
             "",
@@ -559,7 +559,7 @@ class TestRecursiveMakeBackend(BackendTester):
             "$(MDDEPDIR)/bar$(AB_rCD).xyz.stub: %s/generate-foo.py $(call MERGE_RELATIVE_FILE,localized-input,inner/locales) $(srcdir)/non-localized-input $(if $(IS_LANGUAGE_REPACK),FORCE)"  # noqa
             % env.topsrcdir,
             "$(REPORT_BUILD)",
-            "$(call py_action,file_generate bar$(AB_rCD).xyz,--locale=$(AB_CD) %s/generate-foo.py main bar$(AB_rCD).xyz $(MDDEPDIR)/bar$(AB_rCD).xyz.pp $(MDDEPDIR)/bar$(AB_rCD).xyz.stub $(call MERGE_RELATIVE_FILE,localized-input,inner/locales) $(srcdir)/non-localized-input)"  # noqa
+            "$(call py_action,file_generate,--locale=$(AB_CD) %s/generate-foo.py main bar$(AB_rCD).xyz $(MDDEPDIR)/bar$(AB_rCD).xyz.pp $(MDDEPDIR)/bar$(AB_rCD).xyz.stub $(call MERGE_RELATIVE_FILE,localized-input,inner/locales) $(srcdir)/non-localized-input)"  # noqa
             % env.topsrcdir,
             "@$(TOUCH) $@",
             "",
@@ -568,7 +568,7 @@ class TestRecursiveMakeBackend(BackendTester):
             "$(MDDEPDIR)/zot$(AB_rCD).xyz.stub: %s/generate-foo.py $(call MERGE_RELATIVE_FILE,localized-input,locales) $(srcdir)/non-localized-input $(if $(IS_LANGUAGE_REPACK),FORCE)"  # noqa
             % env.topsrcdir,
             "$(REPORT_BUILD)",
-            "$(call py_action,file_generate zot$(AB_rCD).xyz,--locale=$(AB_CD) %s/generate-foo.py main zot$(AB_rCD).xyz $(MDDEPDIR)/zot$(AB_rCD).xyz.pp $(MDDEPDIR)/zot$(AB_rCD).xyz.stub $(call MERGE_RELATIVE_FILE,localized-input,locales) $(srcdir)/non-localized-input)"  # noqa
+            "$(call py_action,file_generate,--locale=$(AB_CD) %s/generate-foo.py main zot$(AB_rCD).xyz $(MDDEPDIR)/zot$(AB_rCD).xyz.pp $(MDDEPDIR)/zot$(AB_rCD).xyz.stub $(call MERGE_RELATIVE_FILE,localized-input,locales) $(srcdir)/non-localized-input)"  # noqa
             % env.topsrcdir,
             "@$(TOUCH) $@",
             "",
diff --git a/python/mozbuild/mozbuild/test/configure/test_toolkit_moz_configure.py b/python/mozbuild/mozbuild/test/configure/test_toolkit_moz_configure.py
index 7d20c0a..34a2a40 100644
--- a/python/mozbuild/mozbuild/test/configure/test_toolkit_moz_configure.py
+++ b/python/mozbuild/mozbuild/test/configure/test_toolkit_moz_configure.py
@@ -11,7 +11,6 @@ from test_toolchain_helpers import CompilerResult
 
 from common import BaseConfigureTest
 from mozbuild.configure.options import InvalidOptionError
-from mozbuild.configure.util import Version
 
 
 class TestToolkitMozConfigure(BaseConfigureTest):
@@ -154,11 +153,7 @@ class TestToolkitMozConfigure(BaseConfigureTest):
             # Trick the sandbox into not running too much
             dep = sandbox._depends[sandbox["c_compiler"]]
             value_for_depends[(dep,)] = CompilerResult(
-                compiler="/usr/bin/mockcc",
-                language="C",
-                type="clang",
-                version=Version("16.0"),
-                flags=[],
+                compiler="/usr/bin/mockcc", language="C", type="clang", flags=[]
             )
             dep = sandbox._depends[sandbox["readelf"]]
             value_for_depends[(dep,)] = "/usr/bin/readelf"
@@ -170,33 +165,11 @@ class TestToolkitMozConfigure(BaseConfigureTest):
             )
 
         PACK = ["-Wl,-z,pack-relative-relocs"]
-        # The typical case with a bootstrap build: linker supports pack-relative-relocs,
-        # but glibc is old and doesn't.
-        mockcc = MockCC(True, False)
-        readelf = ReadElf(True)
-        self.assertEqual(get_values(mockcc, readelf), ("lld", None, "relr"))
-        self.assertEqual(
-            get_values(mockcc, readelf, ["--enable-release"]), ("lld", None, "relr")
-        )
-        self.assertEqual(
-            get_values(mockcc, readelf, ["--enable-elf-hack"]), ("lld", None, "relr")
-        )
-        self.assertEqual(
-            get_values(mockcc, readelf, ["--enable-elf-hack=relr"]),
-            ("lld", None, "relr"),
-        )
-        # LLD is picked by default and enabling elfhack fails because of that.
-        with self.assertRaises(SystemExit):
-            get_values(mockcc, readelf, ["--enable-elf-hack=legacy"])
-        # If we force to use BFD ld, it works.
-        self.assertEqual(
-            get_values(
-                mockcc, readelf, ["--enable-elf-hack=legacy", "--enable-linker=bfd"]
-            ),
-            ("bfd", None, "legacy"),
-        )
-
         for mockcc, readelf in (
+            # The typical case with a bootstrap build: linker supports pack-relative-relocs,
+            # but glibc is old and doesn't. We won't use pack-relative-relocs, and will use
+            # elfhack on release builds, or when explicitly enabled.
+            (MockCC(True, False), ReadElf(True)),
             # Linker doesn't support pack-relative-relocs. Glibc is old.
             (MockCC(False, False), ReadElf(False)),
             # Linker doesn't support pack-relative-relocs. Glibc is new.
@@ -209,15 +182,23 @@ class TestToolkitMozConfigure(BaseConfigureTest):
             self.assertEqual(get_values(mockcc, readelf), ("lld", None, None))
             self.assertEqual(
                 get_values(mockcc, readelf, ["--enable-release"]),
-                ("lld", None, None),
+                ("bfd", None, "legacy"),
             )
+            # LLD is picked by default and enabling elfhack fails because of that.
             with self.assertRaises(SystemExit):
                 get_values(mockcc, readelf, ["--enable-elf-hack"])
-            with self.assertRaises(SystemExit):
-                get_values(mockcc, readelf, ["--enable-elf-hack=relr"])
-            # LLD is picked by default and enabling elfhack fails because of that.
             with self.assertRaises(SystemExit):
                 get_values(mockcc, readelf, ["--enable-elf-hack=legacy"])
+            if readelf.with_relr:
+                # Explicitly enabling relrhack works because pack-relative-relocs are supported.
+                self.assertEqual(
+                    get_values(mockcc, readelf, ["--enable-elf-hack=relr"]),
+                    ("lld", None, "relr"),
+                )
+            else:
+                # relrhack doesn't work without pack-relative-relocs support.
+                with self.assertRaises(SystemExit):
+                    get_values(mockcc, readelf, ["--enable-elf-hack=relr"])
             # If we force to use BFD ld, it works.
             self.assertEqual(
                 get_values(
@@ -238,23 +219,17 @@ class TestToolkitMozConfigure(BaseConfigureTest):
         readelf = ReadElf(True)
         self.assertEqual(get_values(mockcc, readelf), ("lld", PACK, None))
         self.assertEqual(
-            get_values(mockcc, readelf, ["--enable-release"]), ("lld", PACK, None)
-        )
-        self.assertEqual(
-            get_values(mockcc, readelf, ["--enable-elf-hack"]),
-            ("lld", None, "relr"),
-        )
-        self.assertEqual(
-            get_values(mockcc, readelf, ["--enable-elf-hack=relr"]),
-            ("lld", None, "relr"),
+            get_values(mockcc, readelf, ["--enable-release"]), ("bfd", PACK, None)
         )
         # LLD is picked by default and enabling elfhack fails because of that.
+        with self.assertRaises(SystemExit):
+            get_values(mockcc, readelf, ["--enable-elf-hack"])
         with self.assertRaises(SystemExit):
             get_values(mockcc, readelf, ["--enable-elf-hack=legacy"])
         # If we force to use BFD ld, it works.
         self.assertEqual(
             get_values(mockcc, readelf, ["--enable-elf-hack", "--enable-linker=bfd"]),
-            ("bfd", None, "relr"),
+            ("bfd", None, "legacy"),
         )
         self.assertEqual(
             get_values(
@@ -262,6 +237,11 @@ class TestToolkitMozConfigure(BaseConfigureTest):
             ),
             ("bfd", None, "legacy"),
         )
+        # Explicitly enabling relrhack works because pack-relative-relocs are supported.
+        self.assertEqual(
+            get_values(mockcc, readelf, ["--enable-elf-hack=relr"]),
+            ("lld", None, "relr"),
+        )
 
 
 if __name__ == "__main__":
diff --git a/python/mozbuild/mozbuild/test/frontend/data/test-manifest-keys-extracted/a11y.toml b/python/mozbuild/mozbuild/test/frontend/data/test-manifest-keys-extracted/a11y.toml
index 0cfc5d0..bb91aa7 100644
--- a/python/mozbuild/mozbuild/test/frontend/data/test-manifest-keys-extracted/a11y.toml
+++ b/python/mozbuild/mozbuild/test/frontend/data/test-manifest-keys-extracted/a11y.toml
@@ -2,3 +2,4 @@
 support-files = "a11y-support/**"
 
 ['test_a11y.js']
+
diff --git a/python/mozbuild/mozbuild/test/frontend/data/test-manifest-keys-extracted/browser.ini b/python/mozbuild/mozbuild/test/frontend/data/test-manifest-keys-extracted/browser.ini
new file mode 100644
index 0000000..a81ee3a
--- /dev/null
+++ b/python/mozbuild/mozbuild/test/frontend/data/test-manifest-keys-extracted/browser.ini
@@ -0,0 +1,4 @@
+[DEFAULT]
+support-files = support1 support2
+
+[test_browser.js]
diff --git a/python/mozbuild/mozbuild/test/frontend/data/test-manifest-keys-extracted/browser.toml b/python/mozbuild/mozbuild/test/frontend/data/test-manifest-keys-extracted/browser.toml
deleted file mode 100644
index 5cf86c9..0000000
--- a/python/mozbuild/mozbuild/test/frontend/data/test-manifest-keys-extracted/browser.toml
+++ /dev/null
@@ -1,7 +0,0 @@
-[DEFAULT]
-support-files = [
-  "support1",
-  "support2",
-]
-
-["test_browser.js"]
diff --git a/python/mozbuild/mozbuild/test/frontend/data/test-manifest-keys-extracted/moz.build b/python/mozbuild/mozbuild/test/frontend/data/test-manifest-keys-extracted/moz.build
index a8eaca8..dfab1f4 100644
--- a/python/mozbuild/mozbuild/test/frontend/data/test-manifest-keys-extracted/moz.build
+++ b/python/mozbuild/mozbuild/test/frontend/data/test-manifest-keys-extracted/moz.build
@@ -2,7 +2,7 @@
 # http://creativecommons.org/publicdomain/zero/1.0/
 
 A11Y_MANIFESTS += ["a11y.toml"]
-BROWSER_CHROME_MANIFESTS += ["browser.toml"]
+BROWSER_CHROME_MANIFESTS += ["browser.ini"]
 METRO_CHROME_MANIFESTS += ["metro.ini"]
 MOCHITEST_MANIFESTS += ["mochitest.ini"]
 MOCHITEST_CHROME_MANIFESTS += ["chrome.toml"]
diff --git a/python/mozbuild/mozbuild/test/frontend/data/test-manifest-shared-missing/child/browser.ini b/python/mozbuild/mozbuild/test/frontend/data/test-manifest-shared-missing/child/browser.ini
new file mode 100644
index 0000000..4f1335d
--- /dev/null
+++ b/python/mozbuild/mozbuild/test/frontend/data/test-manifest-shared-missing/child/browser.ini
@@ -0,0 +1,6 @@
+[DEFAULT]
+support-files =
+  another-file.sjs
+  data/**
+
+[test_sub.js]
\ No newline at end of file
diff --git a/python/mozbuild/mozbuild/test/frontend/data/test-manifest-shared-missing/child/browser.toml b/python/mozbuild/mozbuild/test/frontend/data/test-manifest-shared-missing/child/browser.toml
deleted file mode 100644
index 98d0242..0000000
--- a/python/mozbuild/mozbuild/test/frontend/data/test-manifest-shared-missing/child/browser.toml
+++ /dev/null
@@ -1,7 +0,0 @@
-[DEFAULT]
-support-files = [
-  "another-file.sjs",
-  "data/**"
-]
-
-["test_sub.js"]
diff --git a/python/mozbuild/mozbuild/test/frontend/data/test-manifest-shared-missing/moz.build b/python/mozbuild/mozbuild/test/frontend/data/test-manifest-shared-missing/moz.build
index 6d6aa4c..9df54db 100644
--- a/python/mozbuild/mozbuild/test/frontend/data/test-manifest-shared-missing/moz.build
+++ b/python/mozbuild/mozbuild/test/frontend/data/test-manifest-shared-missing/moz.build
@@ -2,4 +2,4 @@
 # http://creativecommons.org/publicdomain/zero/1.0/
 
 MOCHITEST_MANIFESTS += ["mochitest.ini"]
-BROWSER_CHROME_MANIFESTS += ["child/browser.toml"]
+BROWSER_CHROME_MANIFESTS += ["child/browser.ini"]
diff --git a/python/mozbuild/mozbuild/test/frontend/data/test-manifest-shared-support/child/browser.ini b/python/mozbuild/mozbuild/test/frontend/data/test-manifest-shared-support/child/browser.ini
new file mode 100644
index 0000000..4f1335d
--- /dev/null
+++ b/python/mozbuild/mozbuild/test/frontend/data/test-manifest-shared-support/child/browser.ini
@@ -0,0 +1,6 @@
+[DEFAULT]
+support-files =
+  another-file.sjs
+  data/**
+
+[test_sub.js]
\ No newline at end of file
diff --git a/python/mozbuild/mozbuild/test/frontend/data/test-manifest-shared-support/child/browser.toml b/python/mozbuild/mozbuild/test/frontend/data/test-manifest-shared-support/child/browser.toml
deleted file mode 100644
index 98d0242..0000000
--- a/python/mozbuild/mozbuild/test/frontend/data/test-manifest-shared-support/child/browser.toml
+++ /dev/null
@@ -1,7 +0,0 @@
-[DEFAULT]
-support-files = [
-  "another-file.sjs",
-  "data/**"
-]
-
-["test_sub.js"]
diff --git a/python/mozbuild/mozbuild/test/frontend/data/test-manifest-shared-support/moz.build b/python/mozbuild/mozbuild/test/frontend/data/test-manifest-shared-support/moz.build
index 6d6aa4c..9df54db 100644
--- a/python/mozbuild/mozbuild/test/frontend/data/test-manifest-shared-support/moz.build
+++ b/python/mozbuild/mozbuild/test/frontend/data/test-manifest-shared-support/moz.build
@@ -2,4 +2,4 @@
 # http://creativecommons.org/publicdomain/zero/1.0/
 
 MOCHITEST_MANIFESTS += ["mochitest.ini"]
-BROWSER_CHROME_MANIFESTS += ["child/browser.toml"]
+BROWSER_CHROME_MANIFESTS += ["child/browser.ini"]
diff --git a/python/mozbuild/mozbuild/test/frontend/test_emitter.py b/python/mozbuild/mozbuild/test/frontend/test_emitter.py
index dc08d28..1a80939 100644
--- a/python/mozbuild/mozbuild/test/frontend/test_emitter.py
+++ b/python/mozbuild/mozbuild/test/frontend/test_emitter.py
@@ -926,10 +926,10 @@ class TestEmitterBasic(unittest.TestCase):
                 "installs": {"a11y.toml": False, "test_a11y.js": True},
                 "pattern-installs": 1,
             },
-            "browser.toml": {
+            "browser.ini": {
                 "flavor": "browser-chrome",
                 "installs": {
-                    "browser.toml": False,
+                    "browser.ini": False,
                     "test_browser.js": True,
                     "support1": False,
                     "support2": False,
diff --git a/python/mozbuild/mozbuild/test/repackaging/test_deb.py b/python/mozbuild/mozbuild/test/repackaging/test_deb.py
index 371efb9..9d0290a 100644
--- a/python/mozbuild/mozbuild/test/repackaging/test_deb.py
+++ b/python/mozbuild/mozbuild/test/repackaging/test_deb.py
@@ -33,6 +33,7 @@ _APPLICATION_INI_CONTENT_DATA = {
     "vendor": "Mozilla",
     "remoting_name": "firefox-nightly-try",
     "build_id": "20230222000000",
+    "timestamp": datetime.datetime(2023, 2, 22),
 }
 
 
@@ -128,21 +129,19 @@ def test_extract_application_ini_data_from_directory():
 def test_get_build_variables(
     version, build_number, package_name_suffix, description_suffix, expected
 ):
-    application_ini_data = deb._parse_application_ini_data(
-        {
-            "name": "Firefox",
-            "display_name": "Firefox",
-            "vendor": "Mozilla",
-            "remoting_name": "firefox-nightly-try",
-            "build_id": "20230222000000",
-        },
-        version,
-        build_number,
-    )
-
+    application_ini_data = {
+        "name": "Firefox",
+        "display_name": "Firefox",
+        "vendor": "Mozilla",
+        "remoting_name": "firefox-nightly-try",
+        "build_id": "20230222000000",
+        "timestamp": datetime.datetime(2023, 2, 22),
+    }
     assert deb._get_build_variables(
         application_ini_data,
         "x86",
+        version,
+        build_number,
         depends="${shlibs:Depends},",
         package_name_suffix=package_name_suffix,
         description_suffix=description_suffix,
@@ -300,13 +299,14 @@ Name[zh_TW]=zh-TW-desktop-action-open-profile-manager
 
 def test_generate_deb_desktop_entry_file_text(monkeypatch):
     def responsive(url):
-        assert "zh-TW" in url
-        return Mock(
-            **{
-                "status_code": 200,
-                "text": ZH_TW_FTL,
-            }
-        )
+        if "zh-TW" in url:
+            return Mock(
+                **{
+                    "status_code": 200,
+                    "text": ZH_TW_FTL,
+                }
+            )
+        return Mock(**{"status_code": 404})
 
     monkeypatch.setattr(deb.requests, "get", responsive)
 
@@ -337,12 +337,6 @@ def test_generate_deb_desktop_entry_file_text(monkeypatch):
 
     fluent_resource_loader = Mock()
 
-    monkeypatch.setattr(
-        deb.json,
-        "load",
-        lambda f: {"zh-TW": {"platforms": ["linux"], "revision": "default"}},
-    )
-
     desktop_entry_file_text = deb._generate_browser_desktop_entry_file_text(
         log,
         build_variables,
@@ -553,63 +547,5 @@ def test_extract_langpack_metadata():
         assert deb._extract_langpack_metadata(langpack_path) == _MANIFEST_JSON_DATA
 
 
-@pytest.mark.parametrize(
-    "version, build_number, expected",
-    (
-        (
-            "112.0a1",
-            1,
-            {
-                "build_id": "20230222000000",
-                "deb_pkg_version": "112.0a1~20230222000000",
-                "display_name": "Firefox Nightly",
-                "name": "Firefox",
-                "remoting_name": "firefox-nightly-try",
-                "timestamp": datetime.datetime(2023, 2, 22, 0, 0),
-                "vendor": "Mozilla",
-            },
-        ),
-        (
-            "112.0b1",
-            1,
-            {
-                "build_id": "20230222000000",
-                "deb_pkg_version": "112.0b1~build1",
-                "display_name": "Firefox Nightly",
-                "name": "Firefox",
-                "remoting_name": "firefox-nightly-try",
-                "timestamp": datetime.datetime(2023, 2, 22, 0, 0),
-                "vendor": "Mozilla",
-            },
-        ),
-        (
-            "112.0",
-            2,
-            {
-                "build_id": "20230222000000",
-                "deb_pkg_version": "112.0~build2",
-                "display_name": "Firefox Nightly",
-                "name": "Firefox",
-                "remoting_name": "firefox-nightly-try",
-                "timestamp": datetime.datetime(2023, 2, 22, 0, 0),
-                "vendor": "Mozilla",
-            },
-        ),
-    ),
-)
-def test_load_application_ini_data(version, build_number, expected):
-    with tempfile.TemporaryDirectory() as d:
-        tar_path = os.path.join(d, "input.tar")
-        with tarfile.open(tar_path, "w") as tar:
-            application_ini_path = os.path.join(d, "application.ini")
-            with open(application_ini_path, "w") as application_ini_file:
-                application_ini_file.write(_APPLICATION_INI_CONTENT)
-            tar.add(application_ini_path)
-        application_ini_data = deb._load_application_ini_data(
-            tar_path, version, build_number
-        )
-        assert application_ini_data == expected
-
-
 if __name__ == "__main__":
     mozunit.main()
diff --git a/python/mozbuild/mozbuild/util.py b/python/mozbuild/mozbuild/util.py
index 903d7fc..3bbec48 100644
--- a/python/mozbuild/mozbuild/util.py
+++ b/python/mozbuild/mozbuild/util.py
@@ -143,13 +143,6 @@ class ReadOnlyDict(dict):
 
         return ReadOnlyDict(**result)
 
-    def __reduce__(self, *args, **kwargs):
-        """
-        Support for `pickle`.
-        """
-
-        return (self.__class__, (dict(self),))
-
 
 class undefined_default(object):
     """Represents an undefined argument value that isn't None."""
diff --git a/python/mozbuild/mozbuild/vendor/mach_commands.py b/python/mozbuild/mozbuild/vendor/mach_commands.py
index 5e8c466..d219261 100644
--- a/python/mozbuild/mozbuild/vendor/mach_commands.py
+++ b/python/mozbuild/mozbuild/vendor/mach_commands.py
@@ -62,7 +62,7 @@ def vendor(
     add_to_exports=False,
     force=False,
     verify=False,
-    patch_mode=None,
+    patch_mode="",
 ):
     """
     Vendor third-party dependencies into the source repository.
@@ -92,21 +92,22 @@ def vendor(
             "Cannot perform update actions if we don't have a 'vendoring' section in the moz.yaml"
         )
 
-    patch_modes = "none", "only", "check"
-    if patch_mode and patch_mode not in patch_modes:
+    if patch_mode and patch_mode not in ["none", "only"]:
         print(
             "Unknown patch mode given '%s'. Please use one of: 'none' or 'only'."
             % patch_mode
         )
         sys.exit(1)
-
-    patches = manifest["vendoring"].get("patches")
-    if patches and not patch_mode and not check_for_update:
+    if (
+        manifest["vendoring"].get("patches", [])
+        and not patch_mode
+        and not check_for_update
+    ):
         print(
             "Patch mode was not given when required. Please use one of: 'none' or 'only'"
         )
         sys.exit(1)
-    if patch_mode == "only" and not patches:
+    if patch_mode == "only" and not manifest["vendoring"].get("patches", []):
         print(
             "Patch import was specified for %s but there are no vendored patches defined."
             % library
diff --git a/python/mozbuild/mozbuild/vendor/vendor_manifest.py b/python/mozbuild/mozbuild/vendor/vendor_manifest.py
index df43f25..d12f961 100644
--- a/python/mozbuild/mozbuild/vendor/vendor_manifest.py
+++ b/python/mozbuild/mozbuild/vendor/vendor_manifest.py
@@ -30,16 +30,6 @@ DEFAULT_KEEP_FILES = ["**/moz.build", "**/moz.yaml"]
 DEFAULT_INCLUDE_FILES = []
 
 
-def iglob_hidden(*args, **kwargs):
-    # glob._ishidden exists from 3.5 up to 3.12 (and beyond?)
-    old_ishidden = glob._ishidden
-    glob._ishidden = lambda x: False
-    try:
-        yield from glob.iglob(*args, **kwargs)
-    finally:
-        glob._ishidden = old_ishidden
-
-
 def throwe():
     raise Exception
 
@@ -120,7 +110,6 @@ class VendorManifest(MozbuildObject):
         self.yaml_file = yaml_file
         self._extract_directory = throwe
         self.logInfo = functools.partial(self.log, logging.INFO, "vendor")
-        self.patch_mode = patch_mode
         if "vendor-directory" not in self.manifest["vendoring"]:
             self.manifest["vendoring"]["vendor-directory"] = os.path.dirname(
                 self.yaml_file
@@ -260,22 +249,6 @@ class VendorManifest(MozbuildObject):
         self.logInfo({}, "Checking for update actions")
         self.update_files(new_revision)
 
-        if self.patch_mode == "check":
-            self.import_local_patches(
-                self.manifest["vendoring"].get("patches", []),
-                os.path.dirname(self.yaml_file),
-                self.manifest["vendoring"]["vendor-directory"],
-            )
-        elif "patches" in self.manifest["vendoring"]:
-            # Remind the user
-            self.log(
-                logging.CRITICAL,
-                "vendor",
-                {},
-                "Patches present in manifest!!! Please run "
-                "'./mach vendor --patch-mode only' after commiting changes.",
-            )
-
         if self.should_perform_step("hg-add"):
             self.logInfo({}, "Registering changes with version control.")
             self.repository.add_remove_files(
@@ -311,6 +284,16 @@ class VendorManifest(MozbuildObject):
 
         self.logInfo({"rev": new_revision}, "Updated to '{rev}'.")
 
+        if "patches" in self.manifest["vendoring"]:
+            # Remind the user
+            self.log(
+                logging.CRITICAL,
+                "vendor",
+                {},
+                "Patches present in manifest!!! Please run "
+                "'./mach vendor --patch-mode only' after commiting changes.",
+            )
+
     def process_regular(self, new_revision, timestamp, ignore_modified, add_to_exports):
         is_individual = False
         self.process_regular_or_individual(
@@ -383,11 +366,11 @@ class VendorManifest(MozbuildObject):
                 # Append double asterisk to the end to make glob.iglob recursively match
                 # contents of directory
                 paths.extend(
-                    iglob_hidden(mozpath.join(pattern_full_path, "**"), recursive=True)
+                    glob.iglob(mozpath.join(pattern_full_path, "**"), recursive=True)
                 )
             # Otherwise pattern is a file or wildcard expression so add it without altering it
             else:
-                paths.extend(iglob_hidden(pattern_full_path, recursive=True))
+                paths.extend(glob.iglob(pattern_full_path, recursive=True))
         # Remove folder names from list of paths in order to avoid prematurely
         # truncating directories elsewhere
         # Sort the final list to ensure we preserve 01_, 02_ ordering for e.g. *.patch globs
@@ -487,9 +470,7 @@ class VendorManifest(MozbuildObject):
                 # GitLab puts everything down a directory; move it up.
                 if has_prefix:
                     tardir = mozpath.join(tmpextractdir.name, one_prefix)
-                    mozfile.copy_contents(
-                        tardir, tmpextractdir.name, ignore_dangling_symlinks=True
-                    )
+                    mozfile.copy_contents(tardir, tmpextractdir.name)
                     mozfile.remove(tardir)
 
                 if self.should_perform_step("include"):
diff --git a/python/mozbuild/mozpack/dmg.py b/python/mozbuild/mozpack/dmg.py
index 4e09464..334f3a6 100644
--- a/python/mozbuild/mozpack/dmg.py
+++ b/python/mozbuild/mozpack/dmg.py
@@ -85,37 +85,17 @@ def create_dmg_from_staged(
     volume_name: str,
     hfs_tool: Path = None,
     dmg_tool: Path = None,
-    mkfshfs_tool: Path = None,
-    attribution_sentinel: str = None,
 ):
     "Given a prepared directory stagedir, produce a DMG at output_dmg."
-
     if is_linux:
         # The dmg tool doesn't create the destination directories, and silently
         # returns success if the parent directory doesn't exist.
         ensureParentDir(output_dmg)
+
         hfs = os.path.join(tmpdir, "staged.hfs")
         subprocess.check_call([hfs_tool, hfs, "addall", stagedir])
-
-        dmg_cmd = [dmg_tool, "build", hfs, output_dmg]
-        if attribution_sentinel:
-            while len(attribution_sentinel) < 1024:
-                attribution_sentinel += "\t"
-            subprocess.check_call(
-                [
-                    hfs_tool,
-                    hfs,
-                    "setattr",
-                    f"{volume_name}.app",
-                    "com.apple.application-instance",
-                    attribution_sentinel,
-                ]
-            )
-            subprocess.check_call(["cp", hfs, str(Path(output_dmg).parent)])
-            dmg_cmd.append(attribution_sentinel)
-
         subprocess.check_call(
-            dmg_cmd,
+            [dmg_tool, "build", hfs, output_dmg],
             # dmg is seriously chatty
             stdout=subprocess.DEVNULL,
         )
@@ -160,7 +140,6 @@ def create_dmg(
     dmg_tool: Path,
     hfs_tool: Path,
     mkfshfs_tool: Path,
-    attribution_sentinel: str = None,
 ):
     """
     Create a DMG disk image at the path output_dmg from source_directory.
@@ -192,14 +171,7 @@ def create_dmg(
         set_folder_icon(stagedir, tmpdir, hfs_tool)
         chmod(stagedir)
         create_dmg_from_staged(
-            stagedir,
-            output_dmg,
-            tmpdir,
-            volume_name,
-            hfs_tool,
-            dmg_tool,
-            mkfshfs_tool,
-            attribution_sentinel,
+            stagedir, output_dmg, tmpdir, volume_name, hfs_tool, dmg_tool
         )
 
 
diff --git a/python/mozlint/test/test_cli.py b/python/mozlint/test/test_cli.py
index 4e9219a..2ad1259 100644
--- a/python/mozlint/test/test_cli.py
+++ b/python/mozlint/test/test_cli.py
@@ -115,7 +115,7 @@ def test_cli_run_with_wrong_linters(run, capfd):
     run(["-l", "external", "-l", "foobar"])
     out, err = capfd.readouterr()
 
-    # Check if it identifies foobar as invalid linter
+    # Check if it identifes foobar as invalid linter
     assert "A failure occurred in the foobar linter." in out
 
     # Check for exception message
diff --git a/python/mozrelease/mozrelease/versions.py b/python/mozrelease/mozrelease/versions.py
index 348b77b..e3e47d4 100644
--- a/python/mozrelease/mozrelease/versions.py
+++ b/python/mozrelease/mozrelease/versions.py
@@ -3,59 +3,9 @@
 # file, You can obtain one at http://mozilla.org/MPL/2.0/.
 
 import re
+from distutils.version import StrictVersion
 
 from looseversion import LooseVersion
-from packaging.version import InvalidVersion
-
-
-class StrictVersion:
-    def __init__(self, vstring):
-        self.parse(vstring)
-
-    def __repr__(self):
-        return "%s ('%s')" % (self.__class__.__name__, str(self))
-
-    def __eq__(self, other):
-        return self._cmp(other) == 0
-
-    def __lt__(self, other):
-        return self._cmp(other) < 0
-
-    def parse(self, vstring):
-        match = self.version_re.match(vstring)
-        if not match:
-            raise InvalidVersion("invalid version number '%s'" % vstring)
-
-        major, minor, patch, pre, pre_num = match.group(1, 2, 4, 5, 6)
-        self.version = int(major), int(minor), int(patch or 0)
-        self.pre = (pre[0], int(pre_num)) if pre else ()
-
-    def __str__(self):
-        return ".".join(map(str, self.version)) + (
-            "".join(map(str, self.pre)) if self.pre else ""
-        )
-
-    def _cmp(self, other):
-        if isinstance(other, str):
-            other = StrictVersion(other)
-        elif not isinstance(other, StrictVersion):
-            raise NotImplementedError
-
-        if self.version < other.version:
-            return -1
-        elif self.version == other.version:
-            if self.pre == other.pre:
-                return 0
-            elif not self.pre:
-                return 1
-            elif not other.pre:
-                return -1
-            elif self.pre < other.pre:
-                return -1
-            else:
-                return 1
-        else:
-            return 1
 
 
 class MozillaVersionCompareMixin:
@@ -143,12 +93,12 @@ class LooseModernMozillaVersion(MozillaVersionCompareMixin, LooseVersion):
 def MozillaVersion(version):
     try:
         return ModernMozillaVersion(version)
-    except InvalidVersion:
+    except ValueError:
         pass
     try:
         if version.count(".") == 3:
             return AncientMozillaVersion(version)
-    except InvalidVersion:
+    except ValueError:
         pass
     try:
         return LooseModernMozillaVersion(version)
diff --git a/python/mozrelease/test/test_versions.py b/python/mozrelease/test/test_versions.py
index eaf7d65..f3bca91 100644
--- a/python/mozrelease/test/test_versions.py
+++ b/python/mozrelease/test/test_versions.py
@@ -1,11 +1,7 @@
 import mozunit
 import pytest
 
-from mozrelease.versions import (
-    AncientMozillaVersion,
-    ModernMozillaVersion,
-    MozillaVersion,
-)
+from mozrelease.versions import MozillaVersion
 
 ALL_VERSIONS = [  # Keep this sorted
     "3.0",
@@ -95,21 +91,6 @@ def test_versions_compare_greater(comparable_versions):
     assert MozillaVersion(larger_version) > MozillaVersion(smaller_version)
 
 
-def test_ModernMozillaVersion():
-    """Test properties specific to ModernMozillaVersion"""
-    assert isinstance(MozillaVersion("1.2.4"), ModernMozillaVersion)
-    assert isinstance(MozillaVersion("1.2.4rc3"), ModernMozillaVersion)
-    assert MozillaVersion("1.2rc3") == MozillaVersion("1.2.0rc3")
-
-
-def test_AncientMozillaVersion():
-    """Test properties specific to AncientMozillaVersion"""
-    assert isinstance(MozillaVersion("1.2.0.4"), AncientMozillaVersion)
-    assert isinstance(MozillaVersion("1.2.0.4pre1"), AncientMozillaVersion)
-    assert MozillaVersion("1.2pre1") == MozillaVersion("1.2.0pre1")
-    assert MozillaVersion("1.2.0.4pre1") == MozillaVersion("1.2.4pre1")
-
-
 @pytest.mark.parametrize("version", ALL_VERSIONS)
 def test_versions_compare_equal(version):
     """Test that versions properly compare as equal through multiple passes."""
diff --git a/python/mozversioncontrol/mozversioncontrol/__init__.py b/python/mozversioncontrol/mozversioncontrol/__init__.py
index 7ae541f..f59ee96 100644
--- a/python/mozversioncontrol/mozversioncontrol/__init__.py
+++ b/python/mozversioncontrol/mozversioncontrol/__init__.py
@@ -9,11 +9,7 @@ import re
 import shutil
 import subprocess
 from pathlib import Path
-from typing import (
-    List,
-    Optional,
-    Union,
-)
+from typing import Optional, Union
 
 from mach.util import to_optional_path
 from mozfile import which
@@ -95,7 +91,7 @@ class Repository(object):
     def __exit__(self, exc_type, exc_value, exc_tb):
         pass
 
-    def _run(self, *args, encoding="utf-8", **runargs):
+    def _run(self, *args, **runargs):
         return_codes = runargs.get("return_codes", [])
 
         cmd = (str(self._tool),) + args
@@ -108,10 +104,7 @@ class Repository(object):
         else:
             try:
                 return subprocess.check_output(
-                    cmd,
-                    cwd=self.path,
-                    env=self._env,
-                    encoding=encoding,
+                    cmd, cwd=self.path, env=self._env, universal_newlines=True
                 )
             except subprocess.CalledProcessError as e:
                 if e.returncode in return_codes:
@@ -324,26 +317,6 @@ class Repository(object):
                 stderr=process.stderr,
             )
 
-    @abc.abstractmethod
-    def get_branch_nodes(self) -> List[str]:
-        """Return a list of commit SHAs for nodes on the current branch."""
-
-    @abc.abstractmethod
-    def get_commit_patches(self, nodes: str) -> List[bytes]:
-        """Return the contents of the patch `node` in the VCS's standard format."""
-
-    @abc.abstractmethod
-    def create_try_commit(self, commit_message: str):
-        """Create a temporary try commit.
-
-        Create a new commit using `commit_message` as the commit message. The commit
-        may be empty, for example when only including try syntax.
-        """
-
-    @abc.abstractmethod
-    def remove_current_commit(self):
-        """Remove the currently checked out commit from VCS history."""
-
 
 class HgRepository(Repository):
     """An implementation of `Repository` for Mercurial repositories."""
@@ -575,13 +548,6 @@ class HgRepository(Repository):
     def update(self, ref):
         return self._run("update", "--check", ref)
 
-    def raise_for_missing_extension(self, extension: str):
-        """Raise `MissingVCSExtension` if `extension` is not installed and enabled."""
-        try:
-            self._run("showconfig", f"extensions.{extension}")
-        except subprocess.CalledProcessError:
-            raise MissingVCSExtension(extension)
-
     def push_to_try(self, message, allow_log_capture=False):
         try:
             cmd = (str(self._tool), "push-to-try", "-m", message)
@@ -604,74 +570,14 @@ class HgRepository(Repository):
                     env=self._env,
                 )
         except subprocess.CalledProcessError:
-            self.raise_for_missing_extension("push-to-try")
+            try:
+                self._run("showconfig", "extensions.push-to-try")
+            except subprocess.CalledProcessError:
+                raise MissingVCSExtension("push-to-try")
             raise
         finally:
             self._run("revert", "-a")
 
-    def get_branch_nodes(self, base_ref: Optional[str] = None) -> List[str]:
-        """Return a list of commit SHAs for nodes on the current branch."""
-        if not base_ref:
-            base_ref = self.base_ref
-
-        head_ref = self.head_ref
-
-        return self._run(
-            "log",
-            "-r",
-            f"{base_ref}::{head_ref} and not {base_ref}",
-            "-T",
-            "{node}\n",
-        ).splitlines()
-
-    def get_commit_patches(self, nodes: List[str]) -> List[bytes]:
-        """Return the contents of the patch `node` in the VCS' standard format."""
-        # Running `hg export` once for each commit in a large stack is
-        # slow, so instead we run it once and parse the output for each
-        # individual patch.
-        args = ["export"]
-
-        for node in nodes:
-            args.extend(("-r", node))
-
-        output = self._run(*args).encode("utf-8")
-
-        patches = []
-
-        current_patch = []
-        for i, line in enumerate(output.splitlines()):
-            if i != 0 and line == b"# HG changeset patch":
-                # When we see the first line of a new patch, add the patch we have been
-                # building to the patches list and start building a new patch.
-                patches.append(b"\n".join(current_patch))
-                current_patch = [line]
-            else:
-                # Add a new line to the patch being built.
-                current_patch.append(line)
-
-        # Add the last patch to the stack.
-        patches.append(b"\n".join(current_patch))
-
-        return patches
-
-    def create_try_commit(self, commit_message: str):
-        """Create a temporary try commit.
-
-        Create a new commit using `commit_message` as the commit message. The commit
-        may be empty, for example when only including try syntax.
-        """
-        # Allow empty commit messages in case we only use try-syntax.
-        self._run("--config", "ui.allowemptycommit=1", "commit", "-m", commit_message)
-
-    def remove_current_commit(self):
-        """Remove the currently checked out commit from VCS history."""
-        try:
-            self._run("prune", ".")
-        except subprocess.CalledProcessError:
-            # The `evolve` extension is required for `uncommit` and `prune`.
-            self.raise_for_missing_extension("evolve")
-            raise
-
 
 class GitRepository(Repository):
     """An implementation of `Repository` for Git repositories."""
@@ -699,7 +605,7 @@ class GitRepository(Repository):
     def base_ref_as_hg(self):
         base_ref = self.base_ref
         try:
-            return self._run("cinnabar", "git2hg", base_ref).strip()
+            return self._run("cinnabar", "git2hg", base_ref)
         except subprocess.CalledProcessError:
             return
 
@@ -821,7 +727,9 @@ class GitRepository(Repository):
         if not self.has_git_cinnabar:
             raise MissingVCSExtension("cinnabar")
 
-        self.create_try_commit(message)
+        self._run(
+            "-c", "commit.gpgSign=false", "commit", "--allow-empty", "-m", message
+        )
         try:
             cmd = (
                 str(self._tool),
@@ -843,43 +751,11 @@ class GitRepository(Repository):
             else:
                 subprocess.check_call(cmd, cwd=self.path)
         finally:
-            self.remove_current_commit()
+            self._run("reset", "HEAD~")
 
     def set_config(self, name, value):
         self._run("config", name, value)
 
-    def get_branch_nodes(self) -> List[str]:
-        """Return a list of commit SHAs for nodes on the current branch."""
-        return self._run(
-            "log",
-            "HEAD",
-            "--reverse",
-            "--not",
-            "--remotes",
-            "--pretty=%H",
-        ).splitlines()
-
-    def get_commit_patches(self, nodes: List[str]) -> List[bytes]:
-        """Return the contents of the patch `node` in the VCS' standard format."""
-        return [
-            self._run("format-patch", node, "-1", "--stdout").encode("utf-8")
-            for node in nodes
-        ]
-
-    def create_try_commit(self, message: str):
-        """Create a temporary try commit.
-
-        Create a new commit using `commit_message` as the commit message. The commit
-        may be empty, for example when only including try syntax.
-        """
-        self._run(
-            "-c", "commit.gpgSign=false", "commit", "--allow-empty", "-m", message
-        )
-
-    def remove_current_commit(self):
-        """Remove the currently checked out commit from VCS history."""
-        self._run("reset", "HEAD~")
-
 
 class SrcRepository(Repository):
     """An implementation of `Repository` for Git repositories."""
diff --git a/python/mozversioncontrol/test/python.ini b/python/mozversioncontrol/test/python.ini
index dcde1d3..79e52bf 100644
--- a/python/mozversioncontrol/test/python.ini
+++ b/python/mozversioncontrol/test/python.ini
@@ -4,11 +4,7 @@ subsuite=mozversioncontrol
 [test_branch.py]
 [test_commit.py]
 [test_context_manager.py]
-[test_create_try_commit.py]
-[test_get_branch_nodes.py]
-[test_get_commit_patches.py]
 [test_push_to_try.py]
-[test_remove_current_commit.py]
 [test_update.py]
 [test_workdir_outgoing.py]
 [test_working_directory.py]
diff --git a/python/mozversioncontrol/test/test_create_try_commit.py b/python/mozversioncontrol/test/test_create_try_commit.py
deleted file mode 100644
index 45e7fac..0000000
--- a/python/mozversioncontrol/test/test_create_try_commit.py
+++ /dev/null
@@ -1,45 +0,0 @@
-# This Source Code Form is subject to the terms of the Mozilla Public
-# License, v. 2.0. If a copy of the MPL was not distributed with this,
-# file, You can obtain one at http://mozilla.org/MPL/2.0/.
-
-import mozunit
-
-from mozversioncontrol import get_repository_object
-
-STEPS = {
-    "hg": [
-        """
-        echo "{}" > try_task_config.json
-        hg add try_task_config.json
-        """,
-    ],
-    "git": [
-        """
-        echo "{}" > try_task_config.json
-        git add try_task_config.json
-        """,
-    ],
-}
-
-
-def test_create_try_commit(repo):
-    commit_message = "try commit message"
-    vcs = get_repository_object(repo.dir)
-
-    # Create a non-empty commit.
-    repo.execute_next_step()
-    vcs.create_try_commit(commit_message)
-    non_empty_commit_sha = vcs.head_ref
-
-    assert vcs.get_changed_files(rev=non_empty_commit_sha) == ["try_task_config.json"]
-
-    # Create an empty commit.
-    vcs.create_try_commit(commit_message)
-    empty_commit_sha = vcs.head_ref
-
-    # Commit should be created with no changed files.
-    assert vcs.get_changed_files(rev=empty_commit_sha) == []
-
-
-if __name__ == "__main__":
-    mozunit.main()
diff --git a/python/mozversioncontrol/test/test_get_branch_nodes.py b/python/mozversioncontrol/test/test_get_branch_nodes.py
deleted file mode 100644
index 898f191..0000000
--- a/python/mozversioncontrol/test/test_get_branch_nodes.py
+++ /dev/null
@@ -1,46 +0,0 @@
-# This Source Code Form is subject to the terms of the Mozilla Public
-# License, v. 2.0. If a copy of the MPL was not distributed with this
-# file, You can obtain one at http://mozilla.org/MPL/2.0/.
-
-import mozunit
-
-from mozversioncontrol import get_repository_object
-
-STEPS = {
-    "hg": [
-        """
-        echo bar >> bar
-        hg commit -m "commit 1"
-        echo baz > baz
-        hg add baz
-        hg commit -m "commit 2"
-        """
-    ],
-    "git": [
-        """
-        echo bar >> bar
-        git add bar
-        git commit -m "commit 1"
-        echo baz > baz
-        git add baz
-        git commit -m "commit 2"
-        """
-    ],
-}
-
-
-def test_get_branch_nodes(repo):
-    vcs = get_repository_object(repo.dir)
-
-    # Create some commits
-    repo.execute_next_step()
-
-    # Get list of branch nodes.
-    nodes = vcs.get_branch_nodes()
-
-    assert len(nodes) == 2
-    assert all(len(node) == 40 for node in nodes), "Each node should be a 40-char SHA."
-
-
-if __name__ == "__main__":
-    mozunit.main()
diff --git a/python/mozversioncontrol/test/test_get_commit_patches.py b/python/mozversioncontrol/test/test_get_commit_patches.py
deleted file mode 100644
index 56301c8..0000000
--- a/python/mozversioncontrol/test/test_get_commit_patches.py
+++ /dev/null
@@ -1,56 +0,0 @@
-# This Source Code Form is subject to the terms of the Mozilla Public
-# License, v. 2.0. If a copy of the MPL was not distributed with this
-# file, You can obtain one at http://mozilla.org/MPL/2.0/.
-
-import mozunit
-
-from mozversioncontrol import get_repository_object
-
-STEPS = {
-    "hg": [
-        """
-        echo bar >> bar
-        hg commit -m "FIRST PATCH"
-        """,
-        """
-        echo baz > baz
-        hg add baz
-        hg commit -m "SECOND PATCH"
-        """,
-    ],
-    "git": [
-        """
-        echo bar >> bar
-        git add bar
-        git commit -m "FIRST PATCH"
-        """,
-        """
-        echo baz > baz
-        git add baz
-        git commit -m "SECOND PATCH"
-        """,
-    ],
-}
-
-
-def test_get_commit_patches(repo):
-    vcs = get_repository_object(repo.dir)
-    nodes = []
-
-    # Create some commits and note the SHAs.
-    repo.execute_next_step()
-    nodes.append(vcs.head_ref)
-
-    repo.execute_next_step()
-    nodes.append(vcs.head_ref)
-
-    patches = vcs.get_commit_patches(nodes)
-
-    assert len(patches) == 2
-    # Assert the patches are returned in the correct order.
-    assert b"FIRST PATCH" in patches[0]
-    assert b"SECOND PATCH" in patches[1]
-
-
-if __name__ == "__main__":
-    mozunit.main()
diff --git a/python/mozversioncontrol/test/test_remove_current_commit.py b/python/mozversioncontrol/test/test_remove_current_commit.py
deleted file mode 100644
index cec20c1..0000000
--- a/python/mozversioncontrol/test/test_remove_current_commit.py
+++ /dev/null
@@ -1,44 +0,0 @@
-# This Source Code Form is subject to the terms of the Mozilla Public
-# License, v. 2.0. If a copy of the MPL was not distributed with this
-# file, You can obtain one at http://mozilla.org/MPL/2.0/.
-
-import mozunit
-import pytest
-
-from mozversioncontrol import get_repository_object
-
-STEPS = {
-    "hg": [
-        """
-        echo "{}" > try_task_config.json
-        hg add try_task_config.json
-        hg commit -m "Try config commit"
-        """
-    ],
-    "git": [
-        """
-        echo "{}" > try_task_config.json
-        git add try_task_config.json
-        git commit -m "Try config commit"
-        """
-    ],
-}
-
-
-@pytest.mark.xfail(reason="Requires the Mercurial evolve extension.", strict=False)
-def test_remove_current_commit(repo):
-    vcs = get_repository_object(repo.dir)
-    initial_head_ref = vcs.head_ref
-
-    # Create a new commit.
-    repo.execute_next_step()
-
-    vcs.remove_current_commit()
-
-    assert (
-        vcs.head_ref == initial_head_ref
-    ), "Removing current commit should revert to previous head."
-
-
-if __name__ == "__main__":
-    mozunit.main()
diff --git a/python/sites/build.txt b/python/sites/build.txt
index e21d08f..3274ba7 100644
--- a/python/sites/build.txt
+++ b/python/sites/build.txt
@@ -10,14 +10,11 @@ vendored:testing/web-platform/tests/tools/wptserve
 vendored:third_party/python/Jinja2
 vendored:third_party/python/PyYAML/lib/
 vendored:third_party/python/aiohttp
-vendored:third_party/python/aiosignal
 vendored:third_party/python/appdirs
 vendored:third_party/python/arrow
 vendored:third_party/python/async_timeout
-vendored:third_party/python/asynctest
 vendored:third_party/python/binaryornot
 vendored:third_party/python/chardet
-vendored:third_party/python/charset_normalizer
 vendored:third_party/python/compare_locales
 vendored:third_party/python/cookiecutter
 vendored:third_party/python/diskcache
@@ -25,20 +22,22 @@ vendored:third_party/python/dlmanager
 vendored:third_party/python/ecdsa
 vendored:third_party/python/fluent.migrate
 vendored:third_party/python/fluent.syntax
-vendored:third_party/python/frozenlist
 vendored:third_party/python/giturlparse
 vendored:third_party/python/glean_parser
 vendored:third_party/python/gyp/pylib
 vendored:third_party/python/jinja2_time
-vendored:third_party/python/json_e
+vendored:third_party/python/json-e
+vendored:third_party/python/jsonschema
 vendored:third_party/python/mohawk
 vendored:third_party/python/mozilla_repo_urls
 vendored:third_party/python/multidict
 vendored:third_party/python/pathspec
+vendored:third_party/python/pkgutil_resolve_name
 vendored:third_party/python/ply
 vendored:third_party/python/pyasn1
 vendored:third_party/python/pyasn1_modules
 vendored:third_party/python/pylru
+vendored:third_party/python/pyrsistent
 vendored:third_party/python/python_dateutil
 vendored:third_party/python/python_slugify
 vendored:third_party/python/redo
diff --git a/python/sites/common.txt b/python/sites/common.txt
index ff3fbb4..b1f8417 100644
--- a/python/sites/common.txt
+++ b/python/sites/common.txt
@@ -9,15 +9,12 @@ vendored:testing/web-platform/tests/tools/wptserve
 vendored:third_party/python/MarkupSafe/src
 vendored:third_party/python/PyYAML/lib/
 vendored:third_party/python/aiohttp
-vendored:third_party/python/aiosignal
 vendored:third_party/python/appdirs
 vendored:third_party/python/arrow
 vendored:third_party/python/async_timeout
-vendored:third_party/python/asynctest
 vendored:third_party/python/binaryornot
 vendored:third_party/python/cbor2
 vendored:third_party/python/chardet
-vendored:third_party/python/charset_normalizer
 vendored:third_party/python/compare_locales
 vendored:third_party/python/cookiecutter
 vendored:third_party/python/cookies
@@ -28,20 +25,22 @@ vendored:third_party/python/ecdsa
 vendored:third_party/python/esprima
 vendored:third_party/python/fluent.migrate
 vendored:third_party/python/fluent.syntax
-vendored:third_party/python/frozenlist
 vendored:third_party/python/giturlparse
 vendored:third_party/python/glean_parser
 vendored:third_party/python/gyp/pylib
 vendored:third_party/python/jinja2_time
-vendored:third_party/python/json_e
+vendored:third_party/python/json-e
+vendored:third_party/python/jsonschema
 vendored:third_party/python/mohawk
 vendored:third_party/python/mozilla_repo_urls
 vendored:third_party/python/multidict
 vendored:third_party/python/pathspec
+vendored:third_party/python/pkgutil_resolve_name
 vendored:third_party/python/ply
 vendored:third_party/python/pyasn1
 vendored:third_party/python/pyasn1_modules
 vendored:third_party/python/pylru
+vendored:third_party/python/pyrsistent
 vendored:third_party/python/python_dateutil
 vendored:third_party/python/python_slugify
 vendored:third_party/python/redo
diff --git a/python/sites/docs.txt b/python/sites/docs.txt
index 464b22d..cefe9b1 100644
--- a/python/sites/docs.txt
+++ b/python/sites/docs.txt
@@ -49,24 +49,22 @@ vendored:third_party/python/Jinja2
 vendored:third_party/python/MarkupSafe/src
 vendored:third_party/python/PyYAML/lib/
 vendored:third_party/python/aiohttp
-vendored:third_party/python/aiosignal
 vendored:third_party/python/appdirs
 vendored:third_party/python/arrow
 vendored:third_party/python/async_timeout
-vendored:third_party/python/asynctest
 vendored:third_party/python/binaryornot
 vendored:third_party/python/certifi
 vendored:third_party/python/chardet
-vendored:third_party/python/charset_normalizer
 vendored:third_party/python/cookiecutter
 vendored:third_party/python/fluent.syntax
-vendored:third_party/python/frozenlist
 vendored:third_party/python/giturlparse
 vendored:third_party/python/jinja2_time
-vendored:third_party/python/json_e
+vendored:third_party/python/json-e
+vendored:third_party/python/jsonschema
 vendored:third_party/python/mohawk
 vendored:third_party/python/mozilla_repo_urls
 vendored:third_party/python/packaging
+vendored:third_party/python/pkgutil_resolve_name
 vendored:third_party/python/python_dateutil
 vendored:third_party/python/python_slugify
 vendored:third_party/python/redo
diff --git a/python/sites/lint.txt b/python/sites/lint.txt
index 391b59e..8a710f4 100644
--- a/python/sites/lint.txt
+++ b/python/sites/lint.txt
@@ -1,25 +1,23 @@
 vendored:third_party/python/PyYAML/lib/
 vendored:third_party/python/aiohttp
-vendored:third_party/python/aiosignal
 vendored:third_party/python/appdirs
 vendored:third_party/python/arrow
 vendored:third_party/python/async_timeout
-vendored:third_party/python/asynctest
 vendored:third_party/python/binaryornot
 vendored:third_party/python/chardet
-vendored:third_party/python/charset_normalizer
 vendored:third_party/python/compare_locales
 vendored:third_party/python/cookiecutter
 vendored:third_party/python/esprima
 vendored:third_party/python/fluent.syntax
-vendored:third_party/python/frozenlist
 vendored:third_party/python/giturlparse
 vendored:third_party/python/jinja2_time
-vendored:third_party/python/json_e
+vendored:third_party/python/json-e
+vendored:third_party/python/jsonschema
 vendored:third_party/python/mohawk
 vendored:third_party/python/mozilla_repo_urls
 vendored:third_party/python/multidict
 vendored:third_party/python/pathspec
+vendored:third_party/python/pyrsistent
 vendored:third_party/python/python_dateutil
 vendored:third_party/python/python_slugify
 vendored:third_party/python/redo
diff --git a/python/sites/mach.txt b/python/sites/mach.txt
index f2a75da..edf1fb6 100644
--- a/python/sites/mach.txt
+++ b/python/sites/mach.txt
@@ -61,7 +61,6 @@ vendored:third_party/python/attrs
 vendored:third_party/python/blessed
 vendored:third_party/python/certifi
 vendored:third_party/python/chardet
-vendored:third_party/python/charset_normalizer
 vendored:third_party/python/click
 vendored:third_party/python/colorama
 vendored:third_party/python/distro
@@ -70,14 +69,11 @@ vendored:third_party/python/importlib_metadata
 vendored:third_party/python/importlib_resources
 vendored:third_party/python/jinxed
 vendored:third_party/python/jsmin
-vendored:third_party/python/jsonschema
 vendored:third_party/python/looseversion
 vendored:third_party/python/mozilla_version
 vendored:third_party/python/packaging
 vendored:third_party/python/pip
 vendored:third_party/python/pip_tools
-vendored:third_party/python/pkgutil_resolve_name
-vendored:third_party/python/pyrsistent
 vendored:third_party/python/python-hglib
 vendored:third_party/python/requests
 vendored:third_party/python/sentry_sdk
diff --git a/python/sites/perftest-test.txt b/python/sites/perftest-test.txt
index 13e079c..f6c754e 100644
--- a/python/sites/perftest-test.txt
+++ b/python/sites/perftest-test.txt
@@ -3,11 +3,7 @@ pypi:coverage==5.1
 vendored:third_party/python/PyYAML/lib/
 vendored:third_party/python/dlmanager
 vendored:third_party/python/esprima
+vendored:third_party/python/jsonschema
+vendored:third_party/python/pyrsistent
 vendored:third_party/python/redo
 vendored:third_party/python/responses
-vendored:third_party/python/taskcluster_taskgraph
-vendored:third_party/python/voluptuous
-vendored:third_party/python/slugid
-vendored:third_party/python/taskcluster_urls
-vendored:third_party/python/mozilla_repo_urls
-vendored:third_party/python/giturlparse
diff --git a/python/sites/python-test.txt b/python/sites/python-test.txt
index 63c84b0..b7068a1 100644
--- a/python/sites/python-test.txt
+++ b/python/sites/python-test.txt
@@ -1,9 +1,4 @@
 pypi:pytest==7.0.1
-pypi:Flask==2.1.3
-# (indirect) avoids dependency on markupsafe >= 2.1.0, which is currently incompatible with glean-parser
-pypi:MarkupSafe==2.0.1
-# (indirect) avoids dependency on markupsafe >= 2.1.0, which is currently incompatible with glean-parser
-pypi:werkzeug==2.1.2
 vendored:testing/web-platform/tests/tools/third_party/h2
 vendored:testing/web-platform/tests/tools/third_party/hpack
 vendored:testing/web-platform/tests/tools/third_party/html5lib
@@ -15,15 +10,12 @@ vendored:testing/web-platform/tests/tools/wptserve
 vendored:third_party/python/MarkupSafe/src
 vendored:third_party/python/PyYAML/lib/
 vendored:third_party/python/aiohttp
-vendored:third_party/python/aiosignal
 vendored:third_party/python/appdirs
 vendored:third_party/python/arrow
 vendored:third_party/python/async_timeout
-vendored:third_party/python/asynctest
 vendored:third_party/python/binaryornot
 vendored:third_party/python/cbor2
 vendored:third_party/python/chardet
-vendored:third_party/python/charset_normalizer
 vendored:third_party/python/compare_locales
 vendored:third_party/python/cookiecutter
 vendored:third_party/python/cookies
@@ -34,20 +26,22 @@ vendored:third_party/python/ecdsa
 vendored:third_party/python/esprima
 vendored:third_party/python/fluent.migrate
 vendored:third_party/python/fluent.syntax
-vendored:third_party/python/frozenlist
 vendored:third_party/python/giturlparse
 vendored:third_party/python/glean_parser
 vendored:third_party/python/gyp/pylib
 vendored:third_party/python/jinja2_time
-vendored:third_party/python/json_e
+vendored:third_party/python/json-e
+vendored:third_party/python/jsonschema
 vendored:third_party/python/mohawk
 vendored:third_party/python/mozilla_repo_urls
 vendored:third_party/python/multidict
 vendored:third_party/python/pathspec
+vendored:third_party/python/pkgutil_resolve_name
 vendored:third_party/python/ply
 vendored:third_party/python/pyasn1
 vendored:third_party/python/pyasn1_modules
 vendored:third_party/python/pylru
+vendored:third_party/python/pyrsistent
 vendored:third_party/python/python_dateutil
 vendored:third_party/python/python_slugify
 vendored:third_party/python/redo
diff --git a/python/sites/try.txt b/python/sites/try.txt
deleted file mode 100644
index 27c445b..0000000
--- a/python/sites/try.txt
+++ /dev/null
@@ -1,69 +0,0 @@
-vendored:testing/web-platform/tests/tools/third_party/h2
-vendored:testing/web-platform/tests/tools/third_party/hpack
-vendored:testing/web-platform/tests/tools/third_party/html5lib
-vendored:testing/web-platform/tests/tools/third_party/hyperframe
-vendored:testing/web-platform/tests/tools/third_party/pywebsocket3
-vendored:testing/web-platform/tests/tools/third_party/webencodings
-vendored:testing/web-platform/tests/tools/wptrunner
-vendored:testing/web-platform/tests/tools/wptserve
-vendored:third_party/python/MarkupSafe/src
-vendored:third_party/python/PyYAML/lib/
-vendored:third_party/python/aiohttp
-vendored:third_party/python/aiosignal
-vendored:third_party/python/appdirs
-vendored:third_party/python/arrow
-vendored:third_party/python/async_timeout
-vendored:third_party/python/asynctest
-vendored:third_party/python/binaryornot
-vendored:third_party/python/cbor2
-vendored:third_party/python/chardet
-vendored:third_party/python/charset_normalizer
-vendored:third_party/python/compare_locales
-vendored:third_party/python/cookiecutter
-vendored:third_party/python/cookies
-vendored:third_party/python/cram
-vendored:third_party/python/diskcache
-vendored:third_party/python/dlmanager
-vendored:third_party/python/ecdsa
-vendored:third_party/python/esprima
-vendored:third_party/python/fluent.migrate
-vendored:third_party/python/fluent.syntax
-vendored:third_party/python/frozenlist
-vendored:third_party/python/giturlparse
-vendored:third_party/python/glean_parser
-vendored:third_party/python/gyp/pylib
-vendored:third_party/python/jinja2_time
-vendored:third_party/python/json_e
-vendored:third_party/python/jsonschema
-vendored:third_party/python/mohawk
-vendored:third_party/python/mozilla_repo_urls
-vendored:third_party/python/multidict
-vendored:third_party/python/pathspec
-vendored:third_party/python/pkgutil_resolve_name
-vendored:third_party/python/ply
-vendored:third_party/python/pyasn1
-vendored:third_party/python/pyasn1_modules
-vendored:third_party/python/pylru
-vendored:third_party/python/pyrsistent
-vendored:third_party/python/python_dateutil
-vendored:third_party/python/python_slugify
-vendored:third_party/python/redo
-vendored:third_party/python/requests_unixsocket
-vendored:third_party/python/responses
-vendored:third_party/python/rsa
-vendored:third_party/python/slugid
-vendored:third_party/python/taskcluster
-vendored:third_party/python/taskcluster_taskgraph
-vendored:third_party/python/taskcluster_urls
-vendored:third_party/python/text_unidecode
-vendored:third_party/python/toml
-vendored:third_party/python/voluptuous
-vendored:third_party/python/yamllint
-vendored:third_party/python/yarl
-
-pypi:auth0-python==4.4.1
-pypi:Flask==2.1.3
-# (indirect) avoids dependency on markupsafe >= 2.1.0, which is currently incompatible with glean-parser
-pypi:MarkupSafe==2.0.1
-# (indirect) avoids dependency on markupsafe >= 2.1.0, which is currently incompatible with glean-parser
-pypi:werkzeug==2.1.2
