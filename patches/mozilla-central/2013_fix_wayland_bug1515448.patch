# HG changeset patch
# Parent  d6bbd9b6e588e194b528b3dcc8606d27b44834bb
Set eglSwapInterval to 0 on wayland

diff --git a/gfx/gl/GLContextProviderEGL.cpp b/gfx/gl/GLContextProviderEGL.cpp
--- a/gfx/gl/GLContextProviderEGL.cpp
+++ b/gfx/gl/GLContextProviderEGL.cpp
@@ -284,16 +284,24 @@ already_AddRefed<GLContext> GLContextEGL
   if (!gl) {
     gfxCriticalNote << "Failed to create EGLContext!";
     mozilla::gl::DestroySurface(surface);
     return nullptr;
   }
 
   gl->MakeCurrent();
   gl->SetIsDoubleBuffered(doubleBuffered);
+
+#if defined(MOZ_WAYLAND)
+  if (surface != EGL_NO_SURFACE &&
+      !GDK_IS_X11_DISPLAY(gdk_display_get_default())) {
+    // Make eglSwapBuffers() non-blocking on wayland
+    egl->fSwapInterval(EGL_DISPLAY(), 0);
+  }
+#endif
   if (aWebRender && egl->IsANGLE()) {
     MOZ_ASSERT(doubleBuffered);
     egl->fSwapInterval(EGL_DISPLAY(), 0);
   }
   return gl.forget();
 }
 
 #if defined(MOZ_WAYLAND) || defined(MOZ_WIDGET_ANDROID)
@@ -460,18 +468,27 @@ bool GLContextEGL::RenewSurface(Composit
   if (nativeWindow) {
     mSurface =
         mozilla::gl::CreateSurfaceFromNativeWindow(nativeWindow, mConfig);
     if (!mSurface) {
       NS_WARNING("Failed to create EGLSurface from native window");
       return false;
     }
   }
-
-  return MakeCurrent(true);
+  const bool ok = MakeCurrent(true);
+  MOZ_ASSERT(ok);
+#if defined(MOZ_WAYLAND)
+  if (mSurface &&
+      !GDK_IS_X11_DISPLAY(gdk_display_get_default())) {
+    const auto* egl = gl::GLLibraryEGL::Get();
+    // Make eglSwapBuffers() non-blocking on wayland
+    egl->fSwapInterval(EGL_DISPLAY(), 0);
+  }
+#endif
+  return ok;
 }
 
 void GLContextEGL::ReleaseSurface() {
   if (mOwnsContext) {
     mozilla::gl::DestroySurface(mSurface);
   }
   if (mSurface == mSurfaceOverride) {
     mSurfaceOverride = EGL_NO_SURFACE;
diff --git a/gfx/webrender_bindings/RenderCompositorEGL.cpp b/gfx/webrender_bindings/RenderCompositorEGL.cpp
--- a/gfx/webrender_bindings/RenderCompositorEGL.cpp
+++ b/gfx/webrender_bindings/RenderCompositorEGL.cpp
@@ -71,16 +71,21 @@ RenderCompositorEGL::~RenderCompositorEG
 
 bool RenderCompositorEGL::BeginFrame() {
   if (mWidget->AsX11() &&
       mWidget->AsX11()->WaylandRequestsUpdatingEGLSurface()) {
     // Destroy EGLSurface if it exists.
     DestroyEGLSurface();
     mEGLSurface = CreateEGLSurface();
     gl::GLContextEGL::Cast(gl())->SetEGLSurfaceOverride(mEGLSurface);
+    if (mEGLSurface) {
+      const auto* egl = gl::GLLibraryEGL::Get();
+      // Make eglSwapBuffers() non-blocking on wayland
+      egl->fSwapInterval(gl::EGL_DISPLAY(), 0);
+    }
   }
 
   if (!mGL->MakeCurrent()) {
     gfxCriticalNote << "Failed to make render context current, can't draw.";
     return false;
   }
 
   return true;
